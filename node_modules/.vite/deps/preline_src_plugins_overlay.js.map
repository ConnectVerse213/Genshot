{
  "version": 3,
  "sources": ["../../preline/src/constants.ts", "../../preline/src/plugins/accessibility-manager/index.ts", "../../preline/src/plugins/overlay/index.ts"],
  "sourcesContent": ["export const POSITIONS: any = {\n\tauto: 'auto',\n\t'auto-start': 'auto-start',\n\t'auto-end': 'auto-end',\n\ttop: 'top',\n\t'top-left': 'top-start',\n\t'top-right': 'top-end',\n\tbottom: 'bottom',\n\t'bottom-left': 'bottom-start',\n\t'bottom-right': 'bottom-end',\n\tright: 'right',\n\t'right-start': 'right-start',\n\t'right-end': 'right-end',\n\tleft: 'left',\n\t'left-start': 'left-start',\n\t'left-end': 'left-end',\n};\n\nexport const DROPDOWN_ACCESSIBILITY_KEY_SET = [\n\t'Escape',\n\t'ArrowUp',\n\t'ArrowDown',\n\t'ArrowRight',\n\t'ArrowLeft',\n\t'Home',\n\t'End',\n\t'Enter',\n];\n\nexport const OVERLAY_ACCESSIBILITY_KEY_SET = ['Escape', 'Tab'];\n\nexport const TABS_ACCESSIBILITY_KEY_SET = [\n\t'ArrowUp',\n\t'ArrowLeft',\n\t'ArrowDown',\n\t'ArrowRight',\n\t'Home',\n\t'End',\n];\n\nexport const SELECT_ACCESSIBILITY_KEY_SET = [\n\t'ArrowUp',\n\t'ArrowLeft',\n\t'ArrowDown',\n\t'ArrowRight',\n\t'Home',\n\t'End',\n\t'Escape',\n\t'Enter',\n\t'Space',\n\t'Tab',\n];\n\nexport const COMBO_BOX_ACCESSIBILITY_KEY_SET = [\n\t'ArrowUp',\n\t'ArrowLeft',\n\t'ArrowDown',\n\t'ArrowRight',\n\t'Home',\n\t'End',\n\t'Escape',\n\t'Enter',\n];\n\nexport const BREAKPOINTS: any = {\n\txs: 0,\n\tsm: 640,\n\tmd: 768,\n\tlg: 1024,\n\txl: 1280,\n\t'2xl': 1536,\n};", "import {\n  IAccessibilityComponent,\n  IAccessibilityKeyboardHandlers,\n} from \"./interfaces\";\n\nclass HSAccessibilityObserver {\n  private components: IAccessibilityComponent[] = [];\n  private currentlyOpenedComponents: IAccessibilityComponent[] = [];\n  private activeComponent: IAccessibilityComponent | null = null;\n\n  private readonly allowedKeybindings = new Set([\n    \"Escape\",\n    \"Enter\",\n    \" \",\n    \"Space\",\n    \"ArrowDown\",\n    \"ArrowUp\",\n    \"ArrowLeft\",\n    \"ArrowRight\",\n    \"Tab\",\n    \"Home\",\n    \"End\",\n  ]);\n\n  constructor() {\n    this.initGlobalListeners();\n  }\n\n  private initGlobalListeners(): void {\n    document.addEventListener(\n      \"keydown\",\n      (evt) => this.handleGlobalKeydown(evt),\n    );\n\n    document.addEventListener(\n      \"focusin\",\n      (evt) => this.handleGlobalFocusin(evt),\n    );\n  }\n\n  private isAllowedKeybinding(evt: KeyboardEvent): boolean {\n    if (this.allowedKeybindings.has(evt.key)) {\n      return true;\n    }\n\n    if (\n      evt.key.length === 1 && /^[a-zA-Z]$/.test(evt.key) && !evt.metaKey &&\n      !evt.ctrlKey && !evt.altKey && !evt.shiftKey\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private getActiveComponent(el: HTMLElement) {\n    if (!el) return null;\n\n    const containingComponents = this.components.filter((comp) =>\n      comp.wrapper.contains(el) || (comp.context && comp.context.contains(el))\n    );\n\n    if (containingComponents.length === 0) return null;\n    if (containingComponents.length === 1) return containingComponents[0];\n\n    let closestComponent = null;\n    let minDistance = Number.MAX_SAFE_INTEGER;\n\n    for (const comp of containingComponents) {\n      let distance = 0;\n      let current = el;\n\n      while (current && current !== comp.wrapper && current !== comp.context) {\n        distance++;\n        current = current.parentElement;\n      }\n\n      if (distance < minDistance) {\n        minDistance = distance;\n        closestComponent = comp;\n      }\n    }\n\n    return closestComponent;\n  }\n\n  private handleGlobalFocusin(evt: FocusEvent): void {\n    const target = evt.target as HTMLElement;\n    this.activeComponent = this.getActiveComponent(target);\n  }\n\n  private handleGlobalKeydown(evt: KeyboardEvent): void {\n    const target = evt.target as HTMLElement;\n    this.activeComponent = this.getActiveComponent(target);\n\n    if (!this.activeComponent) return;\n\n    if (!this.isAllowedKeybinding(evt)) {\n      return;\n    }\n\n    switch (evt.key) {\n      case \"Escape\":\n        if (!this.activeComponent.isOpened) {\n          const closestOpenParent = this.findClosestOpenParent(target);\n\n          if (closestOpenParent?.handlers.onEsc) {\n            closestOpenParent.handlers.onEsc();\n            evt.preventDefault();\n            evt.stopPropagation();\n          }\n        } else if (this.activeComponent.handlers.onEsc) {\n          this.activeComponent.handlers.onEsc();\n          evt.preventDefault();\n          evt.stopPropagation();\n        }\n        break;\n      case \"Enter\":\n        if (this.activeComponent.handlers.onEnter) {\n          this.activeComponent.handlers.onEnter();\n          evt.preventDefault();\n          evt.stopPropagation();\n        }\n        break;\n      case \" \":\n      case \"Space\":\n        if (target.tagName === \"INPUT\" || target.tagName === \"TEXTAREA\") {\n          return;\n        }\n\n        if (this.activeComponent.handlers.onSpace) {\n          this.activeComponent.handlers.onSpace();\n          evt.preventDefault();\n          evt.stopPropagation();\n        }\n        break;\n      case \"ArrowDown\":\n      case \"ArrowUp\":\n      case \"ArrowLeft\":\n      case \"ArrowRight\":\n        if (this.activeComponent.handlers.onArrow) {\n          if (evt.metaKey || evt.ctrlKey || evt.altKey || evt.shiftKey) {\n            return;\n          }\n\n          this.activeComponent.handlers.onArrow(evt);\n          evt.preventDefault();\n          evt.stopPropagation();\n        }\n        break;\n      case \"Tab\":\n        if (!this.activeComponent.handlers.onTab) break;\n\n        const handler = evt.shiftKey\n          ? this.activeComponent.handlers.onShiftTab\n          : this.activeComponent.handlers.onTab;\n\n        if (handler) handler();\n\n        break;\n      case \"Home\":\n        if (this.activeComponent.handlers.onHome) {\n          this.activeComponent.handlers.onHome();\n          evt.preventDefault();\n          evt.stopPropagation();\n        }\n        break;\n      case \"End\":\n        if (this.activeComponent.handlers.onEnd) {\n          this.activeComponent.handlers.onEnd();\n          evt.preventDefault();\n          evt.stopPropagation();\n        }\n        break;\n      default:\n        if (\n          this.activeComponent.handlers.onFirstLetter &&\n          evt.key.length === 1 &&\n          /^[a-zA-Z]$/.test(evt.key)\n        ) {\n          this.activeComponent.handlers.onFirstLetter(evt.key);\n          evt.preventDefault();\n          evt.stopPropagation();\n        }\n        break;\n    }\n  }\n\n  private findClosestOpenParent(\n    target: HTMLElement,\n  ): IAccessibilityComponent | null {\n    let current = target.parentElement;\n\n    while (current) {\n      const parentComponent = this.currentlyOpenedComponents.find((comp) =>\n        comp.wrapper === current && comp !== this.activeComponent\n      );\n\n      if (parentComponent) {\n        return parentComponent;\n      }\n\n      current = current.parentElement;\n    }\n\n    return null;\n  }\n\n  public registerComponent(\n    wrapper: HTMLElement,\n    handlers: IAccessibilityKeyboardHandlers,\n    isOpened: boolean = true,\n    name: string = \"\",\n    selector: string = \"\",\n    context?: HTMLElement,\n  ): IAccessibilityComponent {\n    const component: IAccessibilityComponent = {\n      wrapper,\n      handlers,\n      isOpened,\n      name,\n      selector,\n      context,\n      isRegistered: true,\n    };\n\n    this.components.push(component);\n    return component;\n  }\n\n  public updateComponentState(\n    component: IAccessibilityComponent,\n    isOpened: boolean,\n  ): void {\n    component.isOpened = isOpened;\n\n    if (isOpened) {\n      if (!this.currentlyOpenedComponents.includes(component)) {\n        this.currentlyOpenedComponents.push(component);\n      }\n    } else {\n      this.currentlyOpenedComponents = this.currentlyOpenedComponents.filter(\n        (comp) => comp !== component,\n      );\n    }\n  }\n\n  public unregisterComponent(component: IAccessibilityComponent): void {\n    this.components = this.components.filter((comp) => comp !== component);\n    this.currentlyOpenedComponents = this.currentlyOpenedComponents.filter(\n      (comp) => comp !== component,\n    );\n  }\n\n  public addAllowedKeybinding(key: string): void {\n    this.allowedKeybindings.add(key);\n  }\n\n  public removeAllowedKeybinding(key: string): void {\n    this.allowedKeybindings.delete(key);\n  }\n\n  public getAllowedKeybindings(): string[] {\n    return Array.from(this.allowedKeybindings);\n  }\n}\n\nexport default HSAccessibilityObserver;\n", "/*\n * HSOverlay\n * @version: 3.2.3\n * @author: Preline Labs Ltd.\n * @license: Licensed under MIT and Preline UI Fair Use License (https://preline.co/docs/license.html)\n * Copyright 2024 Preline Labs Ltd.\n */\n\nimport {\n\tafterTransition,\n\tdispatch,\n\tgetClassProperty,\n\tisDirectChild,\n\tstringToBoolean,\n} from \"../../utils\";\n\nimport { IOverlay, IOverlayOptions } from \"./interfaces\";\nimport { TOverlayOptionsAutoCloseEqualityType } from \"./types\";\nimport { ICollectionItem } from \"../../interfaces\";\nimport { IAccessibilityComponent } from \"../accessibility-manager/interfaces\";\nimport { BREAKPOINTS } from \"../../constants\";\n\nimport HSBasePlugin from \"../base-plugin\";\nimport HSAccessibilityObserver from \"../accessibility-manager\";\n\nclass HSOverlay extends HSBasePlugin<{}> implements IOverlay {\n\tprivate accessibilityComponent: IAccessibilityComponent;\n\tprivate lastFocusedToggle: HTMLElement | null = null;\n\tprivate initiallyOpened: boolean;\n\n\tprivate readonly hiddenClass: string | null;\n\tprivate readonly emulateScrollbarSpace: boolean;\n\tprivate readonly isClosePrev: boolean;\n\tprivate readonly backdropClasses: string | null;\n\tprivate readonly backdropParent: string | HTMLElement | Document;\n\tprivate readonly backdropExtraClasses: string | null;\n\tprivate readonly animationTarget: HTMLElement | null;\n\n\tprivate openNextOverlay: boolean;\n\tprivate autoHide: ReturnType<typeof setTimeout> | null;\n\tprivate toggleButtons: HTMLElement[];\n\tpublic toggleMinifierButtons: HTMLElement[];\n\n\tstatic openedItemsQty = 0;\n\n\tpublic initContainer: HTMLElement | null;\n\tpublic isCloseWhenClickInside: boolean;\n\tpublic isTabAccessibilityLimited: boolean;\n\tpublic isLayoutAffect: boolean;\n\tpublic hasAutofocus: boolean;\n\tpublic hasDynamicZIndex: boolean;\n\tpublic hasAbilityToCloseOnBackdropClick: boolean;\n\tpublic openedBreakpoint: number | null;\n\tpublic autoClose: number | null;\n\tpublic autoCloseEqualityType: TOverlayOptionsAutoCloseEqualityType | null;\n\tpublic moveOverlayToBody: number | null;\n\n\tprivate backdrop: HTMLElement | null;\n\tprivate initialZIndex = 0;\n\tstatic currentZIndex = 0;\n\n\tprivate onElementClickListener: {\n\t\tel: HTMLElement;\n\t\tfn: () => void;\n\t}[] | null;\n\tprivate onElementMinifierClickListener: {\n\t\tel: HTMLElement;\n\t\tfn: () => void;\n\t}[] | null;\n\tprivate onOverlayClickListener: (evt: Event) => void;\n\tprivate onBackdropClickListener: () => void;\n\n\tconstructor(el: HTMLElement, options?: IOverlayOptions, events?: {}) {\n\t\tsuper(el, options, events);\n\n\t\t// Collect all data options from toggles\n\t\tthis.toggleButtons = Array.from(\n\t\t\tdocument.querySelectorAll(`[data-hs-overlay=\"#${this.el.id}\"]`),\n\t\t);\n\t\tconst toggleDataOptions = this.collectToggleParameters(this.toggleButtons);\n\n\t\tthis.toggleMinifierButtons = Array.from(\n\t\t\tdocument.querySelectorAll(`[data-hs-overlay-minifier=\"#${this.el.id}\"]`),\n\t\t);\n\n\t\tconst data = el.getAttribute(\"data-hs-overlay-options\");\n\t\tconst dataOptions: IOverlayOptions = data ? JSON.parse(data) : {};\n\t\tconst concatOptions = {\n\t\t\t...dataOptions,\n\t\t\t...toggleDataOptions,\n\t\t\t...options,\n\t\t};\n\n\t\tthis.hiddenClass = concatOptions?.hiddenClass || \"hidden\";\n\t\tthis.emulateScrollbarSpace = concatOptions?.emulateScrollbarSpace || false;\n\t\tthis.isClosePrev = concatOptions?.isClosePrev ?? true;\n\t\tthis.backdropClasses = concatOptions?.backdropClasses ??\n\t\t\t\"hs-overlay-backdrop transition duration fixed inset-0 bg-gray-900/50 dark:bg-neutral-900/80\";\n\t\tthis.backdropParent = typeof concatOptions.backdropParent === \"string\"\n\t\t\t? document.querySelector(concatOptions.backdropParent) as HTMLElement\n\t\t\t: document.body;\n\t\tthis.backdropExtraClasses = concatOptions?.backdropExtraClasses ?? \"\";\n\t\tthis.moveOverlayToBody = concatOptions?.moveOverlayToBody || null;\n\n\t\tthis.openNextOverlay = false;\n\t\tthis.autoHide = null;\n\t\tthis.initContainer = this.el?.parentElement || null;\n\t\tthis.isCloseWhenClickInside = stringToBoolean(\n\t\t\tgetClassProperty(this.el, \"--close-when-click-inside\", \"false\") ||\n\t\t\t\t\"false\",\n\t\t);\n\t\tthis.isTabAccessibilityLimited = stringToBoolean(\n\t\t\tgetClassProperty(this.el, \"--tab-accessibility-limited\", \"true\") ||\n\t\t\t\t\"true\",\n\t\t);\n\t\tthis.isLayoutAffect = stringToBoolean(\n\t\t\tgetClassProperty(this.el, \"--is-layout-affect\", \"false\") || \"false\",\n\t\t);\n\t\tthis.hasAutofocus = stringToBoolean(\n\t\t\tgetClassProperty(this.el, \"--has-autofocus\", \"true\") || \"true\",\n\t\t);\n\t\tthis.hasDynamicZIndex = stringToBoolean(\n\t\t\tgetClassProperty(this.el, \"--has-dynamic-z-index\", \"false\") || \"false\",\n\t\t);\n\t\tthis.hasAbilityToCloseOnBackdropClick = stringToBoolean(\n\t\t\tthis.el.getAttribute(\"data-hs-overlay-keyboard\") || \"true\",\n\t\t);\n\n\t\tconst autoCloseBreakpoint = getClassProperty(this.el, \"--auto-close\");\n\t\tconst autoCloseEqualityType = getClassProperty(\n\t\t\tthis.el,\n\t\t\t\"--auto-close-equality-type\",\n\t\t);\n\t\tconst openedBreakpoint = getClassProperty(this.el, \"--opened\");\n\n\t\tthis.autoClose =\n\t\t\t!isNaN(+autoCloseBreakpoint) && isFinite(+autoCloseBreakpoint)\n\t\t\t\t? +autoCloseBreakpoint\n\t\t\t\t: BREAKPOINTS[autoCloseBreakpoint] || null;\n\t\tthis.autoCloseEqualityType =\n\t\t\tautoCloseEqualityType as TOverlayOptionsAutoCloseEqualityType ?? null;\n\t\tthis.openedBreakpoint =\n\t\t\t(!isNaN(+openedBreakpoint) && isFinite(+openedBreakpoint)\n\t\t\t\t? +openedBreakpoint\n\t\t\t\t: BREAKPOINTS[openedBreakpoint]) || null;\n\n\t\tthis.animationTarget =\n\t\t\tthis?.el?.querySelector(\".hs-overlay-animation-target\") || this.el;\n\n\t\tthis.initialZIndex = parseInt(getComputedStyle(this.el).zIndex, 10);\n\n\t\tthis.onElementClickListener = [];\n\t\tthis.onElementMinifierClickListener = [];\n\n\t\tthis.initiallyOpened = document.body.classList.contains(\n\t\t\t\"hs-overlay-body-open\",\n\t\t);\n\n\t\tthis.init();\n\t}\n\n\tprivate elementClick() {\n\t\tconst payloadFn = () => {\n\t\t\tconst payload = {\n\t\t\t\tel: this.el,\n\t\t\t\tisOpened: !!this.el.classList.contains(\"open\"),\n\t\t\t};\n\n\t\t\tthis.fireEvent(\"toggleClicked\", payload);\n\t\t\tdispatch(\"toggleClicked.hs.overlay\", this.el, payload);\n\t\t};\n\n\t\tif (this.el.classList.contains(\"opened\")) this.close(false, payloadFn);\n\t\telse this.open(payloadFn);\n\t}\n\n\tprivate elementMinifierClick() {\n\t\tconst payloadFn = () => {\n\t\t\tconst payload = {\n\t\t\t\tel: this.el,\n\t\t\t\tisMinified: !!this.el.classList.contains(\"minified\"),\n\t\t\t};\n\n\t\t\tthis.fireEvent(\"toggleMinifierClicked\", payload);\n\t\t\tdispatch(\"toggleMinifierClicked.hs.overlay\", this.el, payload);\n\t\t};\n\n\t\tif (this.el.classList.contains(\"minified\")) this.minify(false, payloadFn);\n\t\telse this.minify(true, payloadFn);\n\t}\n\n\tpublic minify(isMinified: boolean, cb: Function | null = null) {\n\t\tif (isMinified) {\n\t\t\tthis.el.classList.add(\"minified\");\n\t\t\tdocument.body.classList.add(\"hs-overlay-minified\");\n\n\t\t\tif (cb) cb();\n\t\t} else {\n\t\t\tthis.el.classList.remove(\"minified\");\n\t\t\tdocument.body.classList.remove(\"hs-overlay-minified\");\n\n\t\t\tif (cb) cb();\n\t\t}\n\t}\n\n\tprivate overlayClick(evt: Event) {\n\t\tif (\n\t\t\t(evt.target as HTMLElement).id &&\n\t\t\t`#${(evt.target as HTMLElement).id}` === this.el.id &&\n\t\t\tthis.isCloseWhenClickInside &&\n\t\t\tthis.hasAbilityToCloseOnBackdropClick\n\t\t) {\n\t\t\tthis.close();\n\t\t}\n\t}\n\n\tprivate backdropClick() {\n\t\tthis.close();\n\t}\n\n\tprivate init() {\n\t\tthis.createCollection(window.$hsOverlayCollection, this);\n\n\t\tif (this.isLayoutAffect && this.openedBreakpoint) {\n\t\t\tconst instance = HSOverlay.getInstance(this.el, true);\n\n\t\t\tHSOverlay.setOpened(\n\t\t\t\tthis.openedBreakpoint,\n\t\t\t\tinstance as ICollectionItem<HSOverlay>,\n\t\t\t);\n\t\t}\n\n\t\tthis.onOverlayClickListener = (evt) => this.overlayClick(evt);\n\n\t\tthis.el.addEventListener(\"click\", this.onOverlayClickListener);\n\n\t\tif (this.toggleButtons.length) this.buildToggleButtons(this.toggleButtons);\n\n\t\tif (this.toggleMinifierButtons.length) this.buildToggleMinifierButtons();\n\n\t\tif (typeof window !== \"undefined\") {\n\t\t\tif (!window.HSAccessibilityObserver) {\n\t\t\t\twindow.HSAccessibilityObserver = new HSAccessibilityObserver();\n\t\t\t}\n\t\t\tthis.setupAccessibility();\n\t\t}\n\t}\n\n\tprivate buildToggleButtons(buttons: HTMLElement[]) {\n\t\tbuttons.forEach((el) => {\n\t\t\tif (this.el.classList.contains(\"opened\")) el.ariaExpanded = \"true\";\n\t\t\telse el.ariaExpanded = \"false\";\n\n\t\t\tthis.onElementClickListener.push({\n\t\t\t\tel,\n\t\t\t\tfn: () => this.elementClick(),\n\t\t\t});\n\n\t\t\tel.addEventListener(\n\t\t\t\t\"click\",\n\t\t\t\tthis.onElementClickListener.find((toggleButton) =>\n\t\t\t\t\ttoggleButton.el === el\n\t\t\t\t).fn,\n\t\t\t);\n\t\t});\n\t}\n\n\tprivate buildToggleMinifierButtons() {\n\t\tthis.toggleMinifierButtons.forEach((el) => {\n\t\t\tif (this.el.classList.contains(\"minified\")) el.ariaExpanded = \"true\";\n\t\t\telse el.ariaExpanded = \"false\";\n\n\t\t\tthis.onElementMinifierClickListener.push({\n\t\t\t\tel,\n\t\t\t\tfn: () => this.elementMinifierClick(),\n\t\t\t});\n\n\t\t\tel.addEventListener(\n\t\t\t\t\"click\",\n\t\t\t\tthis.onElementMinifierClickListener.find((minifierButton) =>\n\t\t\t\t\tminifierButton.el === el\n\t\t\t\t).fn,\n\t\t\t);\n\t\t});\n\t}\n\n\tprivate hideAuto() {\n\t\tconst time = parseInt(getClassProperty(this.el, \"--auto-hide\", \"0\"));\n\n\t\tif (time) {\n\t\t\tthis.autoHide = setTimeout(() => {\n\t\t\t\tthis.close();\n\t\t\t}, time);\n\t\t}\n\t}\n\n\tprivate checkTimer() {\n\t\tif (this.autoHide) {\n\t\t\tclearTimeout(this.autoHide);\n\n\t\t\tthis.autoHide = null;\n\t\t}\n\t}\n\n\tprivate buildBackdrop() {\n\t\tconst overlayClasses = this.el.classList.value.split(\" \");\n\t\tconst overlayZIndex = parseInt(\n\t\t\twindow.getComputedStyle(this.el).getPropertyValue(\"z-index\"),\n\t\t);\n\t\tconst backdropId =\n\t\t\tthis.el.getAttribute(\"data-hs-overlay-backdrop-container\") || false;\n\t\tthis.backdrop = document.createElement(\"div\");\n\t\tlet backdropClasses =\n\t\t\t`${this.backdropClasses} ${this.backdropExtraClasses}`;\n\t\tconst closeOnBackdrop =\n\t\t\tgetClassProperty(this.el, \"--overlay-backdrop\", \"true\") !== \"static\";\n\t\tconst disableBackdrop =\n\t\t\tgetClassProperty(this.el, \"--overlay-backdrop\", \"true\") === \"false\";\n\n\t\tthis.backdrop.id = `${this.el.id}-backdrop`;\n\t\tif (\"style\" in this.backdrop) {\n\t\t\tthis.backdrop.style.zIndex = `${overlayZIndex - 1}`;\n\t\t}\n\n\t\tfor (const value of overlayClasses) {\n\t\t\tif (\n\t\t\t\tvalue.startsWith(\"hs-overlay-backdrop-open:\") ||\n\t\t\t\tvalue.includes(\":hs-overlay-backdrop-open:\")\n\t\t\t) {\n\t\t\t\tbackdropClasses += ` ${value}`;\n\t\t\t}\n\t\t}\n\n\t\tif (disableBackdrop) return;\n\n\t\tif (backdropId) {\n\t\t\tthis.backdrop = document\n\t\t\t\t.querySelector(backdropId)\n\t\t\t\t.cloneNode(true) as HTMLElement;\n\t\t\tthis.backdrop.classList.remove(\"hidden\");\n\n\t\t\tbackdropClasses = `${\n\t\t\t\t(this.backdrop as HTMLElement).classList.toString()\n\t\t\t}`;\n\t\t\tthis.backdrop.classList.value = \"\";\n\t\t}\n\n\t\tif (closeOnBackdrop) {\n\t\t\tthis.onBackdropClickListener = () => this.backdropClick();\n\n\t\t\tthis.backdrop.addEventListener(\n\t\t\t\t\"click\",\n\t\t\t\tthis.onBackdropClickListener,\n\t\t\t\ttrue,\n\t\t\t);\n\t\t}\n\n\t\tthis.backdrop.setAttribute(\"data-hs-overlay-backdrop-template\", \"\");\n\n\t\t(this.backdropParent as HTMLElement).appendChild(this.backdrop);\n\n\t\tsetTimeout(() => {\n\t\t\tthis.backdrop.classList.value = backdropClasses;\n\t\t});\n\t}\n\n\tprivate destroyBackdrop() {\n\t\tconst backdrop: HTMLElement = document.querySelector(\n\t\t\t`#${this.el.id}-backdrop`,\n\t\t);\n\n\t\tif (!backdrop) return;\n\n\t\tif (this.openNextOverlay) {\n\t\t\tbackdrop.style.transitionDuration = `${\n\t\t\t\tparseFloat(\n\t\t\t\t\twindow\n\t\t\t\t\t\t.getComputedStyle(backdrop)\n\t\t\t\t\t\t.transitionDuration.replace(/[^\\d.-]/g, \"\"),\n\t\t\t\t) * 1.8\n\t\t\t}s`;\n\t\t}\n\n\t\tbackdrop.classList.add(\"opacity-0\");\n\n\t\tafterTransition(backdrop, () => {\n\t\t\tbackdrop.remove();\n\t\t});\n\t}\n\n\tprivate focusElement() {\n\t\tconst input: HTMLInputElement = this.el.querySelector(\"[autofocus]\");\n\n\t\tif (!input) return false;\n\t\telse input.focus();\n\t}\n\n\tprivate getScrollbarSize() {\n\t\tlet div = document.createElement(\"div\");\n\t\tdiv.style.overflow = \"scroll\";\n\t\tdiv.style.width = \"100px\";\n\t\tdiv.style.height = \"100px\";\n\t\tdocument.body.appendChild(div);\n\n\t\tlet scrollbarSize = div.offsetWidth - div.clientWidth;\n\n\t\tdocument.body.removeChild(div);\n\n\t\treturn scrollbarSize;\n\t}\n\n\tprivate collectToggleParameters(buttons: HTMLElement[]) {\n\t\tlet toggleData = {};\n\n\t\tbuttons.forEach((el) => {\n\t\t\tconst data = el.getAttribute(\"data-hs-overlay-options\");\n\t\t\tconst dataOptions: IOverlayOptions = data ? JSON.parse(data) : {};\n\t\t\ttoggleData = {\n\t\t\t\t...toggleData,\n\t\t\t\t...dataOptions,\n\t\t\t};\n\t\t});\n\n\t\treturn toggleData;\n\t}\n\n\tprivate isElementVisible(): boolean {\n\t\tconst style = window.getComputedStyle(this.el);\n\n\t\tif (\n\t\t\tstyle.display === \"none\" || style.visibility === \"hidden\" ||\n\t\t\tstyle.opacity === \"0\"\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst rect = this.el.getBoundingClientRect();\n\n\t\tif (rect.width === 0 || rect.height === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet parent = this.el.parentElement;\n\n\t\twhile (parent) {\n\t\t\tconst parentStyle = window.getComputedStyle(parent);\n\n\t\t\tif (\n\t\t\t\tparentStyle.display === \"none\" || parentStyle.visibility === \"hidden\" ||\n\t\t\t\tparentStyle.opacity === \"0\"\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tparent = parent.parentElement;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate isOpened(): boolean {\n\t\treturn this.el.classList.contains(\"open\") &&\n\t\t\t!this.el.classList.contains(this.hiddenClass);\n\t}\n\n\t// Public methods\n\tpublic open(cb: Function | null = null) {\n\t\tif (this.el.classList.contains(\"minified\")) {\n\t\t\tthis.minify(false);\n\t\t}\n\n\t\tif (this.hasDynamicZIndex) {\n\t\t\tif (HSOverlay.currentZIndex < this.initialZIndex) {\n\t\t\t\tHSOverlay.currentZIndex = this.initialZIndex;\n\t\t\t}\n\n\t\t\tHSOverlay.currentZIndex++;\n\t\t\tthis.el.style.zIndex = `${HSOverlay.currentZIndex}`;\n\t\t}\n\n\t\tconst openedOverlays = document.querySelectorAll(\".hs-overlay.open\");\n\t\tconst currentlyOpened = window.$hsOverlayCollection.find(\n\t\t\t(el) =>\n\t\t\t\tArray.from(openedOverlays).includes(el.element.el) &&\n\t\t\t\t!el.element.isLayoutAffect,\n\t\t);\n\t\tconst toggles = document.querySelectorAll(\n\t\t\t`[data-hs-overlay=\"#${this.el.id}\"]`,\n\t\t);\n\t\tconst disabledScroll =\n\t\t\tgetClassProperty(this.el, \"--body-scroll\", \"false\") !== \"true\";\n\n\t\tthis.lastFocusedToggle = document.activeElement as HTMLElement;\n\n\t\tif (this.isClosePrev && currentlyOpened) {\n\t\t\tthis.openNextOverlay = true;\n\n\t\t\treturn currentlyOpened.element.close().then(() => {\n\t\t\t\tthis.open();\n\n\t\t\t\tthis.openNextOverlay = false;\n\t\t\t});\n\t\t}\n\n\t\tif (disabledScroll) {\n\t\t\tdocument.body.style.overflow = \"hidden\";\n\t\t\tif (this.emulateScrollbarSpace) {\n\t\t\t\tdocument.body.style.paddingRight = `${this.getScrollbarSize()}px`;\n\t\t\t}\n\t\t}\n\n\t\tthis.buildBackdrop();\n\t\tthis.checkTimer();\n\t\tthis.hideAuto();\n\n\t\ttoggles.forEach((toggle) => {\n\t\t\tif (toggle.ariaExpanded) toggle.ariaExpanded = \"true\";\n\t\t});\n\t\tthis.el.classList.remove(this.hiddenClass);\n\t\tthis.el.setAttribute(\"aria-overlay\", \"true\");\n\t\tthis.el.setAttribute(\"tabindex\", \"-1\");\n\n\t\tsetTimeout(() => {\n\t\t\tif (this.el.classList.contains(\"opened\")) return false;\n\n\t\t\tthis.el.classList.add(\"open\", \"opened\");\n\t\t\tif (this.isLayoutAffect) {\n\t\t\t\tdocument.body.classList.add(\"hs-overlay-body-open\");\n\t\t\t}\n\n\t\t\tif (!this.initiallyOpened) {\n\t\t\t\tthis.el.focus();\n\n\t\t\t\tthis.el.style.outline = \"none\";\n\t\t\t}\n\t\t\tthis.initiallyOpened = false;\n\n\t\t\tthis.fireEvent(\"open\", this.el);\n\t\t\tdispatch(\"open.hs.overlay\", this.el, this.el);\n\n\t\t\tif (window.HSAccessibilityObserver && this.accessibilityComponent) {\n\t\t\t\twindow.HSAccessibilityObserver.updateComponentState(\n\t\t\t\t\tthis.accessibilityComponent,\n\t\t\t\t\ttrue,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (this.hasAutofocus) this.focusElement();\n\n\t\t\tif (typeof cb === \"function\") cb();\n\n\t\t\tif (this.isElementVisible()) HSOverlay.openedItemsQty++;\n\t\t}, 50);\n\t}\n\n\tpublic close(forceClose = false, cb: Function | null = null) {\n\t\tif (this.isElementVisible()) {\n\t\t\tHSOverlay.openedItemsQty = HSOverlay.openedItemsQty <= 0\n\t\t\t\t? 0\n\t\t\t\t: HSOverlay.openedItemsQty - 1;\n\t\t}\n\n\t\tif (HSOverlay.openedItemsQty === 0 && this.isLayoutAffect) {\n\t\t\tdocument.body.classList.remove(\"hs-overlay-body-open\");\n\t\t}\n\n\t\tconst closeFn = (_cb: Function) => {\n\t\t\tif (this.el.classList.contains(\"open\")) return false;\n\t\t\tconst toggles = document.querySelectorAll(\n\t\t\t\t`[data-hs-overlay=\"#${this.el.id}\"]`,\n\t\t\t);\n\n\t\t\ttoggles.forEach((toggle) => {\n\t\t\t\tif (toggle.ariaExpanded) toggle.ariaExpanded = \"false\";\n\t\t\t});\n\t\t\tthis.el.classList.add(this.hiddenClass);\n\t\t\tif (this.hasDynamicZIndex) this.el.style.zIndex = \"\";\n\n\t\t\tthis.destroyBackdrop();\n\n\t\t\tthis.fireEvent(\"close\", this.el);\n\t\t\tdispatch(\"close.hs.overlay\", this.el, this.el);\n\n\t\t\tif (window.HSAccessibilityObserver && this.accessibilityComponent) {\n\t\t\t\twindow.HSAccessibilityObserver.updateComponentState(\n\t\t\t\t\tthis.accessibilityComponent,\n\t\t\t\t\tfalse,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (!document.querySelector(\".hs-overlay.opened\")) {\n\t\t\t\tdocument.body.style.overflow = \"\";\n\t\t\t\tif (this.emulateScrollbarSpace) document.body.style.paddingRight = \"\";\n\t\t\t}\n\n\t\t\tif (this.lastFocusedToggle) {\n\t\t\t\tthis.lastFocusedToggle.focus();\n\t\t\t\tthis.lastFocusedToggle = null;\n\t\t\t}\n\n\t\t\t_cb(this.el);\n\t\t\tif (typeof cb === \"function\") cb();\n\n\t\t\tif (HSOverlay.openedItemsQty === 0) {\n\t\t\t\tdocument.body.classList.remove(\"hs-overlay-body-open\");\n\t\t\t\tif (this.hasDynamicZIndex) HSOverlay.currentZIndex = 0;\n\t\t\t}\n\t\t};\n\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.el.classList.remove(\"open\", \"opened\");\n\t\t\tthis.el.removeAttribute(\"aria-overlay\");\n\t\t\tthis.el.removeAttribute(\"tabindex\");\n\n\t\t\tthis.el.style.outline = \"\";\n\n\t\t\tif (forceClose) closeFn(resolve);\n\t\t\telse afterTransition(this.animationTarget, () => closeFn(resolve));\n\t\t});\n\t}\n\n\tpublic updateToggles() {\n\t\tconst found = Array.from(\n\t\t\tdocument.querySelectorAll<HTMLElement>(\n\t\t\t\t`[data-hs-overlay=\"#${this.el.id}\"]`,\n\t\t\t),\n\t\t);\n\t\tconst newButtons = found.filter((btn) => !this.toggleButtons.includes(btn));\n\n\t\tif (newButtons.length) {\n\t\t\tthis.toggleButtons.push(...newButtons);\n\t\t\tthis.buildToggleButtons(newButtons);\n\t\t}\n\n\t\tthis.toggleButtons = this.toggleButtons.filter((btn) => {\n\t\t\tif (document.contains(btn)) return true;\n\n\t\t\tconst listener = this.onElementClickListener?.find(\n\t\t\t\t(lst) => lst.el === btn,\n\t\t\t);\n\t\t\tif (listener) btn.removeEventListener(\"click\", listener.fn as () => void);\n\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tpublic destroy() {\n\t\t// Remove classes\n\t\tthis.el.classList.remove(\"open\", \"opened\", this.hiddenClass);\n\t\tif (this.isLayoutAffect) {\n\t\t\tdocument.body.classList.remove(\"hs-overlay-body-open\");\n\t\t}\n\n\t\t// Remove listeners\n\t\tthis.el.removeEventListener(\"click\", this.onOverlayClickListener);\n\t\tif (this.onElementClickListener.length) {\n\t\t\tthis.onElementClickListener.forEach(({ el, fn }) => {\n\t\t\t\tel.removeEventListener(\"click\", fn);\n\t\t\t});\n\t\t\tthis.onElementClickListener = null;\n\t\t}\n\t\tif (this.backdrop) {\n\t\t\tthis.backdrop.removeEventListener(\"click\", this.onBackdropClickListener);\n\t\t}\n\n\t\tif (this.backdrop) {\n\t\t\tthis.backdrop.remove();\n\t\t\tthis.backdrop = null;\n\t\t}\n\n\t\twindow.$hsOverlayCollection = window.$hsOverlayCollection.filter(\n\t\t\t({ element }) => element.el !== this.el,\n\t\t);\n\t}\n\n\t// Static methods\n\tprivate static findInCollection(\n\t\ttarget: HSOverlay | HTMLElement | string,\n\t): ICollectionItem<HSOverlay> | null {\n\t\treturn window.$hsOverlayCollection.find((el) => {\n\t\t\tif (target instanceof HSOverlay) return el.element.el === target.el;\n\t\t\telse if (typeof target === \"string\") {\n\t\t\t\treturn el.element.el === document.querySelector(target);\n\t\t\t} else return el.element.el === target;\n\t\t}) || null;\n\t}\n\n\tstatic getInstance(target: HTMLElement | string, isInstance?: boolean) {\n\t\t// Backward compatibility\n\t\tconst _temp = typeof target === \"string\"\n\t\t\t? document.querySelector(target)\n\t\t\t: target;\n\t\tconst _target = _temp?.getAttribute(\"data-hs-overlay\")\n\t\t\t? _temp.getAttribute(\"data-hs-overlay\")\n\t\t\t: target;\n\n\t\tconst elInCollection = window.$hsOverlayCollection.find(\n\t\t\t(el) =>\n\t\t\t\tel.element.el ===\n\t\t\t\t\t(typeof _target === \"string\"\n\t\t\t\t\t\t? document.querySelector(_target)\n\t\t\t\t\t\t: _target) ||\n\t\t\t\tel.element.el ===\n\t\t\t\t\t(typeof _target === \"string\"\n\t\t\t\t\t\t? document.querySelector(_target)\n\t\t\t\t\t\t: _target),\n\t\t);\n\n\t\treturn elInCollection\n\t\t\t? isInstance ? elInCollection : elInCollection.element.el\n\t\t\t: null;\n\t}\n\n\tstatic autoInit() {\n\t\tif (!window.$hsOverlayCollection) {\n\t\t\twindow.$hsOverlayCollection = [];\n\t\t}\n\n\t\tif (window.$hsOverlayCollection) {\n\t\t\twindow.$hsOverlayCollection = window.$hsOverlayCollection.filter(\n\t\t\t\t({ element }) => document.contains(element.el),\n\t\t\t);\n\t\t}\n\n\t\tdocument\n\t\t\t.querySelectorAll(\".hs-overlay:not(.--prevent-on-load-init)\")\n\t\t\t.forEach((el: HTMLElement) => {\n\t\t\t\tif (\n\t\t\t\t\t!window.$hsOverlayCollection.find(\n\t\t\t\t\t\t(elC) => (elC?.element?.el as HTMLElement) === el,\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\tnew HSOverlay(el);\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tstatic open(target: HSOverlay | HTMLElement | string) {\n\t\tconst instance = HSOverlay.findInCollection(target);\n\n\t\tif (\n\t\t\tinstance &&\n\t\t\tinstance.element.el.classList.contains(instance.element.hiddenClass)\n\t\t) instance.element.open();\n\t}\n\n\tstatic close(target: HSOverlay | HTMLElement | string) {\n\t\tconst instance = HSOverlay.findInCollection(target);\n\n\t\tif (\n\t\t\tinstance &&\n\t\t\t!instance.element.el.classList.contains(instance.element.hiddenClass)\n\t\t) instance.element.close();\n\t}\n\n\tstatic minify(target: HSOverlay | HTMLElement | string, isMinified: boolean) {\n\t\tconst instance = HSOverlay.findInCollection(target);\n\n\t\tif (instance) {\n\t\t\tinstance.element.minify(isMinified);\n\t\t}\n\t}\n\n\tstatic setOpened(breakpoint: number, el: ICollectionItem<HSOverlay>) {\n\t\tif (document.body.clientWidth >= breakpoint) {\n\t\t\tif (el.element.el.classList.contains(\"minified\")) {\n\t\t\t\tel.element.minify(false);\n\t\t\t}\n\n\t\t\tdocument.body.classList.add(\"hs-overlay-body-open\");\n\n\t\t\tel.element.open();\n\t\t} else el.element.close(true);\n\t}\n\n\t// Accessibility methods\n\tprivate setupAccessibility(): void {\n\t\tthis.accessibilityComponent = window.HSAccessibilityObserver\n\t\t\t.registerComponent(\n\t\t\t\tthis.el,\n\t\t\t\t{\n\t\t\t\t\tonEnter: () => {\n\t\t\t\t\t\tif (!this.isOpened()) this.open();\n\t\t\t\t\t},\n\t\t\t\t\tonEsc: () => {\n\t\t\t\t\t\tif (this.isOpened()) {\n\t\t\t\t\t\t\tthis.close();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tonTab: () => {\n\t\t\t\t\t\tif (!this.isOpened() || !this.isTabAccessibilityLimited) return;\n\n\t\t\t\t\t\tconst focusableElements = Array.from(\n\t\t\t\t\t\t\tthis.el.querySelectorAll<HTMLElement>(\n\t\t\t\t\t\t\t\t'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])',\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t).filter((el) =>\n\t\t\t\t\t\t\t!el.hidden && window.getComputedStyle(el).display !== \"none\"\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (focusableElements.length === 0) return;\n\n\t\t\t\t\t\tconst focusedElement = this.el.querySelector(\":focus\");\n\t\t\t\t\t\tconst currentIndex = focusedElement\n\t\t\t\t\t\t\t? focusableElements.indexOf(focusedElement as HTMLElement)\n\t\t\t\t\t\t\t: -1;\n\t\t\t\t\t\tconst isShiftPressed = window.event instanceof KeyboardEvent &&\n\t\t\t\t\t\t\twindow.event.shiftKey;\n\n\t\t\t\t\t\tif (isShiftPressed) {\n\t\t\t\t\t\t\tif (currentIndex <= 0) {\n\t\t\t\t\t\t\t\tfocusableElements[focusableElements.length - 1].focus();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfocusableElements[currentIndex - 1].focus();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (currentIndex === focusableElements.length - 1) {\n\t\t\t\t\t\t\t\tfocusableElements[0].focus();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfocusableElements[currentIndex + 1].focus();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twindow.event?.preventDefault();\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tthis.isOpened(),\n\t\t\t\t\"Overlay\",\n\t\t\t\t\".hs-overlay\",\n\t\t\t);\n\n\t\tthis.toggleButtons.forEach((toggleButton) => {\n\t\t\twindow.HSAccessibilityObserver.registerComponent(\n\t\t\t\ttoggleButton,\n\t\t\t\t{\n\t\t\t\t\tonEnter: () => {\n\t\t\t\t\t\tif (!this.isOpened()) this.open();\n\t\t\t\t\t},\n\t\t\t\t\tonEsc: () => {\n\t\t\t\t\t\tif (this.isOpened()) {\n\t\t\t\t\t\t\tthis.close();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tthis.isOpened(),\n\t\t\t\t\"Overlay Toggle\",\n\t\t\t\t`[data-hs-overlay=\"#${this.el.id}\"]`,\n\t\t\t);\n\t\t});\n\t}\n\n\t// Backward compatibility\n\tstatic on(\n\t\tevt: string,\n\t\ttarget: HSOverlay | HTMLElement | string,\n\t\tcb: Function,\n\t) {\n\t\tconst instance = HSOverlay.findInCollection(target);\n\n\t\tif (instance) instance.element.events[evt] = cb;\n\t}\n}\n\ndeclare global {\n\tinterface Window {\n\t\tHSOverlay: Function;\n\t\t$hsOverlayCollection: ICollectionItem<HSOverlay>[];\n\t}\n}\n\nlet resizeTimeout: ReturnType<typeof setTimeout> | null = null;\n\nconst debounceResize = (callback: () => void, delay: number = 150) => {\n\tif (resizeTimeout) clearTimeout(resizeTimeout);\n\n\tresizeTimeout = setTimeout(callback, delay);\n};\n\nconst autoCloseResizeFn = () => {\n\tif (\n\t\t!window.$hsOverlayCollection.length ||\n\t\t!window.$hsOverlayCollection.find((el) => el.element.autoClose)\n\t) {\n\t\treturn false;\n\t}\n\n\tconst overlays = window.$hsOverlayCollection.filter(\n\t\t(el) => el.element.autoClose,\n\t);\n\n\toverlays.forEach((overlay) => {\n\t\tconst { autoCloseEqualityType, autoClose } = overlay.element;\n\t\tconst condition = autoCloseEqualityType === \"less-than\"\n\t\t\t? document.body.clientWidth <= autoClose\n\t\t\t: document.body.clientWidth >= autoClose;\n\n\t\tif (condition && overlay.element.el.classList.contains(\"opened\")) {\n\t\t\tif (overlay.element.el.classList.contains(\"minified\")) {\n\t\t\t\toverlay.element.minify(false);\n\t\t\t}\n\n\t\t\toverlay.element.close(true);\n\t\t} else {\n\t\t\tif (\n\t\t\t\toverlay.element.isLayoutAffect &&\n\t\t\t\toverlay.element.el.classList.contains(\"opened\")\n\t\t\t) {\n\t\t\t\tdocument.body.classList.add(\"hs-overlay-body-open\");\n\t\t\t}\n\t\t}\n\t});\n};\n\nconst moveOverlayToBodyResizeFn = () => {\n\tif (\n\t\t!window.$hsOverlayCollection.length ||\n\t\t!window.$hsOverlayCollection.find((el) => el.element.moveOverlayToBody)\n\t) {\n\t\treturn false;\n\t}\n\n\tconst overlays = window.$hsOverlayCollection.filter(\n\t\t(el) => el.element.moveOverlayToBody,\n\t);\n\n\toverlays.forEach((overlay) => {\n\t\tconst resolution = overlay.element.moveOverlayToBody;\n\t\tconst initPlace = overlay.element.initContainer;\n\t\tconst newPlace = document.querySelector(\"body\");\n\t\tconst target = overlay.element.el;\n\n\t\tif (!initPlace && target) return false;\n\n\t\tif (\n\t\t\tdocument.body.clientWidth <= resolution &&\n\t\t\t!isDirectChild(newPlace, target)\n\t\t) {\n\t\t\tnewPlace.appendChild(target);\n\t\t} else if (\n\t\t\tdocument.body.clientWidth > resolution &&\n\t\t\t!initPlace.contains(target)\n\t\t) {\n\t\t\tinitPlace.appendChild(target);\n\t\t}\n\t});\n};\n\nconst setOpenedResizeFn = () => {\n\tif (\n\t\t!window.$hsOverlayCollection.length ||\n\t\t!window.$hsOverlayCollection.find((el) => el.element.openedBreakpoint)\n\t) {\n\t\treturn false;\n\t}\n\n\tconst overlays = window.$hsOverlayCollection.filter(\n\t\t(el) => el.element.openedBreakpoint,\n\t);\n\n\toverlays.forEach((overlay) => {\n\t\tconst { openedBreakpoint } = overlay.element;\n\t\tconst condition = document.body.clientWidth >= openedBreakpoint;\n\n\t\tif (condition) {\n\t\t\tif (!overlay.element.el.classList.contains(\"opened\")) {\n\t\t\t\tHSOverlay.setOpened(openedBreakpoint, overlay);\n\t\t\t}\n\t\t} else {\n\t\t\tif (overlay.element.el.classList.contains(\"opened\")) {\n\t\t\t\tif (overlay.element.el.classList.contains(\"minified\")) {\n\t\t\t\t\toverlay.element.minify(false);\n\t\t\t\t}\n\n\t\t\t\toverlay.element.close(true);\n\t\t\t}\n\t\t}\n\t});\n};\n\nconst setBackdropZIndexResizeFn = () => {\n\tif (\n\t\t!window.$hsOverlayCollection.length ||\n\t\t!window.$hsOverlayCollection.find((el) =>\n\t\t\tel.element.el.classList.contains(\"opened\")\n\t\t)\n\t) {\n\t\treturn false;\n\t}\n\n\tconst overlays = window.$hsOverlayCollection.filter((el) =>\n\t\tel.element.el.classList.contains(\"opened\")\n\t);\n\n\toverlays.forEach((overlay) => {\n\t\tconst overlayZIndex = parseInt(\n\t\t\twindow.getComputedStyle(overlay.element.el).getPropertyValue(\"z-index\"),\n\t\t);\n\t\tconst backdrop: HTMLElement = document.querySelector(\n\t\t\t`#${overlay.element.el.id}-backdrop`,\n\t\t);\n\t\tif (!backdrop) return false;\n\n\t\tconst backdropZIndex = parseInt(\n\t\t\twindow.getComputedStyle(backdrop).getPropertyValue(\"z-index\"),\n\t\t);\n\t\tif (overlayZIndex === backdropZIndex + 1) return false;\n\n\t\tif (\"style\" in backdrop) backdrop.style.zIndex = `${overlayZIndex - 1}`;\n\n\t\tdocument.body.classList.add(\"hs-overlay-body-open\");\n\t});\n};\n\nconst ensureBodyOpenForMinifiedSidebar = () => {\n\tif (!window.$hsOverlayCollection?.length) return;\n\n\twindow.$hsOverlayCollection.forEach((overlayItem) => {\n\t\tconst overlay = overlayItem.element;\n\t\tif (\n\t\t\toverlay.toggleMinifierButtons?.length > 0 &&\n\t\t\toverlay.openedBreakpoint\n\t\t) {\n\t\t\tif (document.body.clientWidth >= overlay.openedBreakpoint) {\n\t\t\t\tdocument.body.classList.add(\"hs-overlay-body-open\");\n\t\t\t} else {\n\t\t\t\tdocument.body.classList.remove(\"hs-overlay-body-open\");\n\t\t\t}\n\t\t}\n\t});\n};\n\nwindow.addEventListener(\"load\", () => {\n\tHSOverlay.autoInit();\n\n\tmoveOverlayToBodyResizeFn();\n\tensureBodyOpenForMinifiedSidebar();\n\n\t// Uncomment for debug\n\t// console.log('Overlay collection:', window.$hsOverlayCollection);\n});\n\nwindow.addEventListener(\"resize\", () => {\n\tdebounceResize(() => {\n\t\tautoCloseResizeFn();\n\t\tsetOpenedResizeFn();\n\t});\n\n\tmoveOverlayToBodyResizeFn();\n\tsetBackdropZIndexResizeFn();\n\tensureBodyOpenForMinifiedSidebar();\n});\n\nif (typeof window !== \"undefined\") {\n\twindow.HSOverlay = HSOverlay;\n}\n\nexport default HSOverlay;\n"],
  "mappings": ";;;;;;;;;;;;;AAgEO,IAAM,cAAmB;AAAA,EAC/B,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,OAAO;AACR;;;AClEA,IAAM,0BAAN,MAA8B;AAAA,EAmB5B,cAAc;AAlBd,wBAAQ,cAAwC,CAAC;AACjD,wBAAQ,6BAAuD,CAAC;AAChE,wBAAQ,mBAAkD;AAE1D,wBAAiB,sBAAqB,oBAAI,IAAI;AAAA,MAC5C;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF,CAAC;AAGC,SAAK,oBAAoB;AAAA,EAC3B;AAAA,EAEQ,sBAA4B;AAClC,aAAS;AAAA,MACP;AAAA,MACA,CAAC,QAAQ,KAAK,oBAAoB,GAAG;AAAA,IACvC;AAEA,aAAS;AAAA,MACP;AAAA,MACA,CAAC,QAAQ,KAAK,oBAAoB,GAAG;AAAA,IACvC;AAAA,EACF;AAAA,EAEQ,oBAAoB,KAA6B;AACvD,QAAI,KAAK,mBAAmB,IAAI,IAAI,GAAG,GAAG;AACxC,aAAO;AAAA,IACT;AAEA,QACE,IAAI,IAAI,WAAW,KAAK,aAAa,KAAK,IAAI,GAAG,KAAK,CAAC,IAAI,WAC3D,CAAC,IAAI,WAAW,CAAC,IAAI,UAAU,CAAC,IAAI,UACpC;AACA,aAAO;AAAA,IACT;AAEA,WAAO;AAAA,EACT;AAAA,EAEQ,mBAAmB,IAAiB;AAC1C,QAAI,CAAC,GAAI,QAAO;AAEhB,UAAM,uBAAuB,KAAK,WAAW;AAAA,MAAO,CAAC,SACnD,KAAK,QAAQ,SAAS,EAAE,KAAM,KAAK,WAAW,KAAK,QAAQ,SAAS,EAAE;AAAA,IACxE;AAEA,QAAI,qBAAqB,WAAW,EAAG,QAAO;AAC9C,QAAI,qBAAqB,WAAW,EAAG,QAAO,qBAAqB,CAAC;AAEpE,QAAI,mBAAmB;AACvB,QAAI,cAAc,OAAO;AAEzB,eAAW,QAAQ,sBAAsB;AACvC,UAAI,WAAW;AACf,UAAI,UAAU;AAEd,aAAO,WAAW,YAAY,KAAK,WAAW,YAAY,KAAK,SAAS;AACtE;AACA,kBAAU,QAAQ;AAAA,MACpB;AAEA,UAAI,WAAW,aAAa;AAC1B,sBAAc;AACd,2BAAmB;AAAA,MACrB;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAAA,EAEQ,oBAAoB,KAAuB;AACjD,UAAM,SAAS,IAAI;AACnB,SAAK,kBAAkB,KAAK,mBAAmB,MAAM;AAAA,EACvD;AAAA,EAEQ,oBAAoB,KAA0B;AACpD,UAAM,SAAS,IAAI;AACnB,SAAK,kBAAkB,KAAK,mBAAmB,MAAM;AAErD,QAAI,CAAC,KAAK,gBAAiB;AAE3B,QAAI,CAAC,KAAK,oBAAoB,GAAG,GAAG;AAClC;AAAA,IACF;AAEA,YAAQ,IAAI,KAAK;AAAA,MACf,KAAK;AACH,YAAI,CAAC,KAAK,gBAAgB,UAAU;AAClC,gBAAM,oBAAoB,KAAK,sBAAsB,MAAM;AAE3D,cAAI,uDAAmB,SAAS,OAAO;AACrC,8BAAkB,SAAS,MAAM;AACjC,gBAAI,eAAe;AACnB,gBAAI,gBAAgB;AAAA,UACtB;AAAA,QACF,WAAW,KAAK,gBAAgB,SAAS,OAAO;AAC9C,eAAK,gBAAgB,SAAS,MAAM;AACpC,cAAI,eAAe;AACnB,cAAI,gBAAgB;AAAA,QACtB;AACA;AAAA,MACF,KAAK;AACH,YAAI,KAAK,gBAAgB,SAAS,SAAS;AACzC,eAAK,gBAAgB,SAAS,QAAQ;AACtC,cAAI,eAAe;AACnB,cAAI,gBAAgB;AAAA,QACtB;AACA;AAAA,MACF,KAAK;AAAA,MACL,KAAK;AACH,YAAI,OAAO,YAAY,WAAW,OAAO,YAAY,YAAY;AAC/D;AAAA,QACF;AAEA,YAAI,KAAK,gBAAgB,SAAS,SAAS;AACzC,eAAK,gBAAgB,SAAS,QAAQ;AACtC,cAAI,eAAe;AACnB,cAAI,gBAAgB;AAAA,QACtB;AACA;AAAA,MACF,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AACH,YAAI,KAAK,gBAAgB,SAAS,SAAS;AACzC,cAAI,IAAI,WAAW,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU;AAC5D;AAAA,UACF;AAEA,eAAK,gBAAgB,SAAS,QAAQ,GAAG;AACzC,cAAI,eAAe;AACnB,cAAI,gBAAgB;AAAA,QACtB;AACA;AAAA,MACF,KAAK;AACH,YAAI,CAAC,KAAK,gBAAgB,SAAS,MAAO;AAE1C,cAAM,UAAU,IAAI,WAChB,KAAK,gBAAgB,SAAS,aAC9B,KAAK,gBAAgB,SAAS;AAElC,YAAI,QAAS,SAAQ;AAErB;AAAA,MACF,KAAK;AACH,YAAI,KAAK,gBAAgB,SAAS,QAAQ;AACxC,eAAK,gBAAgB,SAAS,OAAO;AACrC,cAAI,eAAe;AACnB,cAAI,gBAAgB;AAAA,QACtB;AACA;AAAA,MACF,KAAK;AACH,YAAI,KAAK,gBAAgB,SAAS,OAAO;AACvC,eAAK,gBAAgB,SAAS,MAAM;AACpC,cAAI,eAAe;AACnB,cAAI,gBAAgB;AAAA,QACtB;AACA;AAAA,MACF;AACE,YACE,KAAK,gBAAgB,SAAS,iBAC9B,IAAI,IAAI,WAAW,KACnB,aAAa,KAAK,IAAI,GAAG,GACzB;AACA,eAAK,gBAAgB,SAAS,cAAc,IAAI,GAAG;AACnD,cAAI,eAAe;AACnB,cAAI,gBAAgB;AAAA,QACtB;AACA;AAAA,IACJ;AAAA,EACF;AAAA,EAEQ,sBACN,QACgC;AAChC,QAAI,UAAU,OAAO;AAErB,WAAO,SAAS;AACd,YAAM,kBAAkB,KAAK,0BAA0B;AAAA,QAAK,CAAC,SAC3D,KAAK,YAAY,WAAW,SAAS,KAAK;AAAA,MAC5C;AAEA,UAAI,iBAAiB;AACnB,eAAO;AAAA,MACT;AAEA,gBAAU,QAAQ;AAAA,IACpB;AAEA,WAAO;AAAA,EACT;AAAA,EAEO,kBACL,SACA,UACA,WAAoB,MACpB,OAAe,IACf,WAAmB,IACnB,SACyB;AACzB,UAAM,YAAqC;AAAA,MACzC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,cAAc;AAAA,IAChB;AAEA,SAAK,WAAW,KAAK,SAAS;AAC9B,WAAO;AAAA,EACT;AAAA,EAEO,qBACL,WACA,UACM;AACN,cAAU,WAAW;AAErB,QAAI,UAAU;AACZ,UAAI,CAAC,KAAK,0BAA0B,SAAS,SAAS,GAAG;AACvD,aAAK,0BAA0B,KAAK,SAAS;AAAA,MAC/C;AAAA,IACF,OAAO;AACL,WAAK,4BAA4B,KAAK,0BAA0B;AAAA,QAC9D,CAAC,SAAS,SAAS;AAAA,MACrB;AAAA,IACF;AAAA,EACF;AAAA,EAEO,oBAAoB,WAA0C;AACnE,SAAK,aAAa,KAAK,WAAW,OAAO,CAAC,SAAS,SAAS,SAAS;AACrE,SAAK,4BAA4B,KAAK,0BAA0B;AAAA,MAC9D,CAAC,SAAS,SAAS;AAAA,IACrB;AAAA,EACF;AAAA,EAEO,qBAAqB,KAAmB;AAC7C,SAAK,mBAAmB,IAAI,GAAG;AAAA,EACjC;AAAA,EAEO,wBAAwB,KAAmB;AAChD,SAAK,mBAAmB,OAAO,GAAG;AAAA,EACpC;AAAA,EAEO,wBAAkC;AACvC,WAAO,MAAM,KAAK,KAAK,kBAAkB;AAAA,EAC3C;AACF;AAEA,IAAO,gCAAQ;;;AClPf,IAAM,aAAN,MAAM,mBAAkB,aAAqC;AAAA,EA+C5D,YAAY,IAAiB,SAA2B,QAAa;AAxEtE;AAyEE,UAAM,IAAI,SAAS,MAAM;AA/C1B,wBAAQ;AACR,wBAAQ,qBAAwC;AAChD,wBAAQ;AAER,wBAAiB;AACjB,wBAAiB;AACjB,wBAAiB;AACjB,wBAAiB;AACjB,wBAAiB;AACjB,wBAAiB;AACjB,wBAAiB;AAEjB,wBAAQ;AACR,wBAAQ;AACR,wBAAQ;AACR,wBAAO;AAIP,wBAAO;AACP,wBAAO;AACP,wBAAO;AACP,wBAAO;AACP,wBAAO;AACP,wBAAO;AACP,wBAAO;AACP,wBAAO;AACP,wBAAO;AACP,wBAAO;AACP,wBAAO;AAEP,wBAAQ;AACR,wBAAQ,iBAAgB;AAGxB,wBAAQ;AAIR,wBAAQ;AAIR,wBAAQ;AACR,wBAAQ;AAMP,SAAK,gBAAgB,MAAM;AAAA,MAC1B,SAAS,iBAAiB,sBAAsB,KAAK,GAAG,EAAE,IAAI;AAAA,IAC/D;AACA,UAAM,oBAAoB,KAAK,wBAAwB,KAAK,aAAa;AAEzE,SAAK,wBAAwB,MAAM;AAAA,MAClC,SAAS,iBAAiB,+BAA+B,KAAK,GAAG,EAAE,IAAI;AAAA,IACxE;AAEA,UAAM,OAAO,GAAG,aAAa,yBAAyB;AACtD,UAAM,cAA+B,OAAO,KAAK,MAAM,IAAI,IAAI,CAAC;AAChE,UAAM,gBAAgB;AAAA,MACrB,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AAEA,SAAK,eAAc,+CAAe,gBAAe;AACjD,SAAK,yBAAwB,+CAAe,0BAAyB;AACrE,SAAK,eAAc,+CAAe,gBAAe;AACjD,SAAK,mBAAkB,+CAAe,oBACrC;AACD,SAAK,iBAAiB,OAAO,cAAc,mBAAmB,WAC3D,SAAS,cAAc,cAAc,cAAc,IACnD,SAAS;AACZ,SAAK,wBAAuB,+CAAe,yBAAwB;AACnE,SAAK,qBAAoB,+CAAe,sBAAqB;AAE7D,SAAK,kBAAkB;AACvB,SAAK,WAAW;AAChB,SAAK,kBAAgB,UAAK,OAAL,mBAAS,kBAAiB;AAC/C,SAAK,yBAAyB;AAAA,MAC7B,iBAAiB,KAAK,IAAI,6BAA6B,OAAO,KAC7D;AAAA,IACF;AACA,SAAK,4BAA4B;AAAA,MAChC,iBAAiB,KAAK,IAAI,+BAA+B,MAAM,KAC9D;AAAA,IACF;AACA,SAAK,iBAAiB;AAAA,MACrB,iBAAiB,KAAK,IAAI,sBAAsB,OAAO,KAAK;AAAA,IAC7D;AACA,SAAK,eAAe;AAAA,MACnB,iBAAiB,KAAK,IAAI,mBAAmB,MAAM,KAAK;AAAA,IACzD;AACA,SAAK,mBAAmB;AAAA,MACvB,iBAAiB,KAAK,IAAI,yBAAyB,OAAO,KAAK;AAAA,IAChE;AACA,SAAK,mCAAmC;AAAA,MACvC,KAAK,GAAG,aAAa,0BAA0B,KAAK;AAAA,IACrD;AAEA,UAAM,sBAAsB,iBAAiB,KAAK,IAAI,cAAc;AACpE,UAAM,wBAAwB;AAAA,MAC7B,KAAK;AAAA,MACL;AAAA,IACD;AACA,UAAM,mBAAmB,iBAAiB,KAAK,IAAI,UAAU;AAE7D,SAAK,YACJ,CAAC,MAAM,CAAC,mBAAmB,KAAK,SAAS,CAAC,mBAAmB,IAC1D,CAAC,sBACD,YAAY,mBAAmB,KAAK;AACxC,SAAK,wBACJ,yBAAiE;AAClE,SAAK,oBACH,CAAC,MAAM,CAAC,gBAAgB,KAAK,SAAS,CAAC,gBAAgB,IACrD,CAAC,mBACD,YAAY,gBAAgB,MAAM;AAEtC,SAAK,oBACJ,kCAAM,OAAN,mBAAU,cAAc,oCAAmC,KAAK;AAEjE,SAAK,gBAAgB,SAAS,iBAAiB,KAAK,EAAE,EAAE,QAAQ,EAAE;AAElE,SAAK,yBAAyB,CAAC;AAC/B,SAAK,iCAAiC,CAAC;AAEvC,SAAK,kBAAkB,SAAS,KAAK,UAAU;AAAA,MAC9C;AAAA,IACD;AAEA,SAAK,KAAK;AAAA,EACX;AAAA,EAEQ,eAAe;AACtB,UAAM,YAAY,MAAM;AACvB,YAAM,UAAU;AAAA,QACf,IAAI,KAAK;AAAA,QACT,UAAU,CAAC,CAAC,KAAK,GAAG,UAAU,SAAS,MAAM;AAAA,MAC9C;AAEA,WAAK,UAAU,iBAAiB,OAAO;AACvC,eAAS,4BAA4B,KAAK,IAAI,OAAO;AAAA,IACtD;AAEA,QAAI,KAAK,GAAG,UAAU,SAAS,QAAQ,EAAG,MAAK,MAAM,OAAO,SAAS;AAAA,QAChE,MAAK,KAAK,SAAS;AAAA,EACzB;AAAA,EAEQ,uBAAuB;AAC9B,UAAM,YAAY,MAAM;AACvB,YAAM,UAAU;AAAA,QACf,IAAI,KAAK;AAAA,QACT,YAAY,CAAC,CAAC,KAAK,GAAG,UAAU,SAAS,UAAU;AAAA,MACpD;AAEA,WAAK,UAAU,yBAAyB,OAAO;AAC/C,eAAS,oCAAoC,KAAK,IAAI,OAAO;AAAA,IAC9D;AAEA,QAAI,KAAK,GAAG,UAAU,SAAS,UAAU,EAAG,MAAK,OAAO,OAAO,SAAS;AAAA,QACnE,MAAK,OAAO,MAAM,SAAS;AAAA,EACjC;AAAA,EAEO,OAAO,YAAqB,KAAsB,MAAM;AAC9D,QAAI,YAAY;AACf,WAAK,GAAG,UAAU,IAAI,UAAU;AAChC,eAAS,KAAK,UAAU,IAAI,qBAAqB;AAEjD,UAAI,GAAI,IAAG;AAAA,IACZ,OAAO;AACN,WAAK,GAAG,UAAU,OAAO,UAAU;AACnC,eAAS,KAAK,UAAU,OAAO,qBAAqB;AAEpD,UAAI,GAAI,IAAG;AAAA,IACZ;AAAA,EACD;AAAA,EAEQ,aAAa,KAAY;AAChC,QACE,IAAI,OAAuB,MAC5B,IAAK,IAAI,OAAuB,EAAE,OAAO,KAAK,GAAG,MACjD,KAAK,0BACL,KAAK,kCACJ;AACD,WAAK,MAAM;AAAA,IACZ;AAAA,EACD;AAAA,EAEQ,gBAAgB;AACvB,SAAK,MAAM;AAAA,EACZ;AAAA,EAEQ,OAAO;AACd,SAAK,iBAAiB,OAAO,sBAAsB,IAAI;AAEvD,QAAI,KAAK,kBAAkB,KAAK,kBAAkB;AACjD,YAAM,WAAW,WAAU,YAAY,KAAK,IAAI,IAAI;AAEpD,iBAAU;AAAA,QACT,KAAK;AAAA,QACL;AAAA,MACD;AAAA,IACD;AAEA,SAAK,yBAAyB,CAAC,QAAQ,KAAK,aAAa,GAAG;AAE5D,SAAK,GAAG,iBAAiB,SAAS,KAAK,sBAAsB;AAE7D,QAAI,KAAK,cAAc,OAAQ,MAAK,mBAAmB,KAAK,aAAa;AAEzE,QAAI,KAAK,sBAAsB,OAAQ,MAAK,2BAA2B;AAEvE,QAAI,OAAO,WAAW,aAAa;AAClC,UAAI,CAAC,OAAO,yBAAyB;AACpC,eAAO,0BAA0B,IAAI,8BAAwB;AAAA,MAC9D;AACA,WAAK,mBAAmB;AAAA,IACzB;AAAA,EACD;AAAA,EAEQ,mBAAmB,SAAwB;AAClD,YAAQ,QAAQ,CAAC,OAAO;AACvB,UAAI,KAAK,GAAG,UAAU,SAAS,QAAQ,EAAG,IAAG,eAAe;AAAA,UACvD,IAAG,eAAe;AAEvB,WAAK,uBAAuB,KAAK;AAAA,QAChC;AAAA,QACA,IAAI,MAAM,KAAK,aAAa;AAAA,MAC7B,CAAC;AAED,SAAG;AAAA,QACF;AAAA,QACA,KAAK,uBAAuB;AAAA,UAAK,CAAC,iBACjC,aAAa,OAAO;AAAA,QACrB,EAAE;AAAA,MACH;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEQ,6BAA6B;AACpC,SAAK,sBAAsB,QAAQ,CAAC,OAAO;AAC1C,UAAI,KAAK,GAAG,UAAU,SAAS,UAAU,EAAG,IAAG,eAAe;AAAA,UACzD,IAAG,eAAe;AAEvB,WAAK,+BAA+B,KAAK;AAAA,QACxC;AAAA,QACA,IAAI,MAAM,KAAK,qBAAqB;AAAA,MACrC,CAAC;AAED,SAAG;AAAA,QACF;AAAA,QACA,KAAK,+BAA+B;AAAA,UAAK,CAAC,mBACzC,eAAe,OAAO;AAAA,QACvB,EAAE;AAAA,MACH;AAAA,IACD,CAAC;AAAA,EACF;AAAA,EAEQ,WAAW;AAClB,UAAM,OAAO,SAAS,iBAAiB,KAAK,IAAI,eAAe,GAAG,CAAC;AAEnE,QAAI,MAAM;AACT,WAAK,WAAW,WAAW,MAAM;AAChC,aAAK,MAAM;AAAA,MACZ,GAAG,IAAI;AAAA,IACR;AAAA,EACD;AAAA,EAEQ,aAAa;AACpB,QAAI,KAAK,UAAU;AAClB,mBAAa,KAAK,QAAQ;AAE1B,WAAK,WAAW;AAAA,IACjB;AAAA,EACD;AAAA,EAEQ,gBAAgB;AACvB,UAAM,iBAAiB,KAAK,GAAG,UAAU,MAAM,MAAM,GAAG;AACxD,UAAM,gBAAgB;AAAA,MACrB,OAAO,iBAAiB,KAAK,EAAE,EAAE,iBAAiB,SAAS;AAAA,IAC5D;AACA,UAAM,aACL,KAAK,GAAG,aAAa,oCAAoC,KAAK;AAC/D,SAAK,WAAW,SAAS,cAAc,KAAK;AAC5C,QAAI,kBACH,GAAG,KAAK,eAAe,IAAI,KAAK,oBAAoB;AACrD,UAAM,kBACL,iBAAiB,KAAK,IAAI,sBAAsB,MAAM,MAAM;AAC7D,UAAM,kBACL,iBAAiB,KAAK,IAAI,sBAAsB,MAAM,MAAM;AAE7D,SAAK,SAAS,KAAK,GAAG,KAAK,GAAG,EAAE;AAChC,QAAI,WAAW,KAAK,UAAU;AAC7B,WAAK,SAAS,MAAM,SAAS,GAAG,gBAAgB,CAAC;AAAA,IAClD;AAEA,eAAW,SAAS,gBAAgB;AACnC,UACC,MAAM,WAAW,2BAA2B,KAC5C,MAAM,SAAS,4BAA4B,GAC1C;AACD,2BAAmB,IAAI,KAAK;AAAA,MAC7B;AAAA,IACD;AAEA,QAAI,gBAAiB;AAErB,QAAI,YAAY;AACf,WAAK,WAAW,SACd,cAAc,UAAU,EACxB,UAAU,IAAI;AAChB,WAAK,SAAS,UAAU,OAAO,QAAQ;AAEvC,wBAAkB,GAChB,KAAK,SAAyB,UAAU,SAAS,CACnD;AACA,WAAK,SAAS,UAAU,QAAQ;AAAA,IACjC;AAEA,QAAI,iBAAiB;AACpB,WAAK,0BAA0B,MAAM,KAAK,cAAc;AAExD,WAAK,SAAS;AAAA,QACb;AAAA,QACA,KAAK;AAAA,QACL;AAAA,MACD;AAAA,IACD;AAEA,SAAK,SAAS,aAAa,qCAAqC,EAAE;AAElE,IAAC,KAAK,eAA+B,YAAY,KAAK,QAAQ;AAE9D,eAAW,MAAM;AAChB,WAAK,SAAS,UAAU,QAAQ;AAAA,IACjC,CAAC;AAAA,EACF;AAAA,EAEQ,kBAAkB;AACzB,UAAM,WAAwB,SAAS;AAAA,MACtC,IAAI,KAAK,GAAG,EAAE;AAAA,IACf;AAEA,QAAI,CAAC,SAAU;AAEf,QAAI,KAAK,iBAAiB;AACzB,eAAS,MAAM,qBAAqB,GACnC;AAAA,QACC,OACE,iBAAiB,QAAQ,EACzB,mBAAmB,QAAQ,YAAY,EAAE;AAAA,MAC5C,IAAI,GACL;AAAA,IACD;AAEA,aAAS,UAAU,IAAI,WAAW;AAElC,oBAAgB,UAAU,MAAM;AAC/B,eAAS,OAAO;AAAA,IACjB,CAAC;AAAA,EACF;AAAA,EAEQ,eAAe;AACtB,UAAM,QAA0B,KAAK,GAAG,cAAc,aAAa;AAEnE,QAAI,CAAC,MAAO,QAAO;AAAA,QACd,OAAM,MAAM;AAAA,EAClB;AAAA,EAEQ,mBAAmB;AAC1B,QAAI,MAAM,SAAS,cAAc,KAAK;AACtC,QAAI,MAAM,WAAW;AACrB,QAAI,MAAM,QAAQ;AAClB,QAAI,MAAM,SAAS;AACnB,aAAS,KAAK,YAAY,GAAG;AAE7B,QAAI,gBAAgB,IAAI,cAAc,IAAI;AAE1C,aAAS,KAAK,YAAY,GAAG;AAE7B,WAAO;AAAA,EACR;AAAA,EAEQ,wBAAwB,SAAwB;AACvD,QAAI,aAAa,CAAC;AAElB,YAAQ,QAAQ,CAAC,OAAO;AACvB,YAAM,OAAO,GAAG,aAAa,yBAAyB;AACtD,YAAM,cAA+B,OAAO,KAAK,MAAM,IAAI,IAAI,CAAC;AAChE,mBAAa;AAAA,QACZ,GAAG;AAAA,QACH,GAAG;AAAA,MACJ;AAAA,IACD,CAAC;AAED,WAAO;AAAA,EACR;AAAA,EAEQ,mBAA4B;AACnC,UAAM,QAAQ,OAAO,iBAAiB,KAAK,EAAE;AAE7C,QACC,MAAM,YAAY,UAAU,MAAM,eAAe,YACjD,MAAM,YAAY,KACjB;AACD,aAAO;AAAA,IACR;AAEA,UAAM,OAAO,KAAK,GAAG,sBAAsB;AAE3C,QAAI,KAAK,UAAU,KAAK,KAAK,WAAW,GAAG;AAC1C,aAAO;AAAA,IACR;AAEA,QAAI,SAAS,KAAK,GAAG;AAErB,WAAO,QAAQ;AACd,YAAM,cAAc,OAAO,iBAAiB,MAAM;AAElD,UACC,YAAY,YAAY,UAAU,YAAY,eAAe,YAC7D,YAAY,YAAY,KACvB;AACD,eAAO;AAAA,MACR;AAEA,eAAS,OAAO;AAAA,IACjB;AAEA,WAAO;AAAA,EACR;AAAA,EAEQ,WAAoB;AAC3B,WAAO,KAAK,GAAG,UAAU,SAAS,MAAM,KACvC,CAAC,KAAK,GAAG,UAAU,SAAS,KAAK,WAAW;AAAA,EAC9C;AAAA;AAAA,EAGO,KAAK,KAAsB,MAAM;AACvC,QAAI,KAAK,GAAG,UAAU,SAAS,UAAU,GAAG;AAC3C,WAAK,OAAO,KAAK;AAAA,IAClB;AAEA,QAAI,KAAK,kBAAkB;AAC1B,UAAI,WAAU,gBAAgB,KAAK,eAAe;AACjD,mBAAU,gBAAgB,KAAK;AAAA,MAChC;AAEA,iBAAU;AACV,WAAK,GAAG,MAAM,SAAS,GAAG,WAAU,aAAa;AAAA,IAClD;AAEA,UAAM,iBAAiB,SAAS,iBAAiB,kBAAkB;AACnE,UAAM,kBAAkB,OAAO,qBAAqB;AAAA,MACnD,CAAC,OACA,MAAM,KAAK,cAAc,EAAE,SAAS,GAAG,QAAQ,EAAE,KACjD,CAAC,GAAG,QAAQ;AAAA,IACd;AACA,UAAM,UAAU,SAAS;AAAA,MACxB,sBAAsB,KAAK,GAAG,EAAE;AAAA,IACjC;AACA,UAAM,iBACL,iBAAiB,KAAK,IAAI,iBAAiB,OAAO,MAAM;AAEzD,SAAK,oBAAoB,SAAS;AAElC,QAAI,KAAK,eAAe,iBAAiB;AACxC,WAAK,kBAAkB;AAEvB,aAAO,gBAAgB,QAAQ,MAAM,EAAE,KAAK,MAAM;AACjD,aAAK,KAAK;AAEV,aAAK,kBAAkB;AAAA,MACxB,CAAC;AAAA,IACF;AAEA,QAAI,gBAAgB;AACnB,eAAS,KAAK,MAAM,WAAW;AAC/B,UAAI,KAAK,uBAAuB;AAC/B,iBAAS,KAAK,MAAM,eAAe,GAAG,KAAK,iBAAiB,CAAC;AAAA,MAC9D;AAAA,IACD;AAEA,SAAK,cAAc;AACnB,SAAK,WAAW;AAChB,SAAK,SAAS;AAEd,YAAQ,QAAQ,CAAC,WAAW;AAC3B,UAAI,OAAO,aAAc,QAAO,eAAe;AAAA,IAChD,CAAC;AACD,SAAK,GAAG,UAAU,OAAO,KAAK,WAAW;AACzC,SAAK,GAAG,aAAa,gBAAgB,MAAM;AAC3C,SAAK,GAAG,aAAa,YAAY,IAAI;AAErC,eAAW,MAAM;AAChB,UAAI,KAAK,GAAG,UAAU,SAAS,QAAQ,EAAG,QAAO;AAEjD,WAAK,GAAG,UAAU,IAAI,QAAQ,QAAQ;AACtC,UAAI,KAAK,gBAAgB;AACxB,iBAAS,KAAK,UAAU,IAAI,sBAAsB;AAAA,MACnD;AAEA,UAAI,CAAC,KAAK,iBAAiB;AAC1B,aAAK,GAAG,MAAM;AAEd,aAAK,GAAG,MAAM,UAAU;AAAA,MACzB;AACA,WAAK,kBAAkB;AAEvB,WAAK,UAAU,QAAQ,KAAK,EAAE;AAC9B,eAAS,mBAAmB,KAAK,IAAI,KAAK,EAAE;AAE5C,UAAI,OAAO,2BAA2B,KAAK,wBAAwB;AAClE,eAAO,wBAAwB;AAAA,UAC9B,KAAK;AAAA,UACL;AAAA,QACD;AAAA,MACD;AAEA,UAAI,KAAK,aAAc,MAAK,aAAa;AAEzC,UAAI,OAAO,OAAO,WAAY,IAAG;AAEjC,UAAI,KAAK,iBAAiB,EAAG,YAAU;AAAA,IACxC,GAAG,EAAE;AAAA,EACN;AAAA,EAEO,MAAM,aAAa,OAAO,KAAsB,MAAM;AAC5D,QAAI,KAAK,iBAAiB,GAAG;AAC5B,iBAAU,iBAAiB,WAAU,kBAAkB,IACpD,IACA,WAAU,iBAAiB;AAAA,IAC/B;AAEA,QAAI,WAAU,mBAAmB,KAAK,KAAK,gBAAgB;AAC1D,eAAS,KAAK,UAAU,OAAO,sBAAsB;AAAA,IACtD;AAEA,UAAM,UAAU,CAAC,QAAkB;AAClC,UAAI,KAAK,GAAG,UAAU,SAAS,MAAM,EAAG,QAAO;AAC/C,YAAM,UAAU,SAAS;AAAA,QACxB,sBAAsB,KAAK,GAAG,EAAE;AAAA,MACjC;AAEA,cAAQ,QAAQ,CAAC,WAAW;AAC3B,YAAI,OAAO,aAAc,QAAO,eAAe;AAAA,MAChD,CAAC;AACD,WAAK,GAAG,UAAU,IAAI,KAAK,WAAW;AACtC,UAAI,KAAK,iBAAkB,MAAK,GAAG,MAAM,SAAS;AAElD,WAAK,gBAAgB;AAErB,WAAK,UAAU,SAAS,KAAK,EAAE;AAC/B,eAAS,oBAAoB,KAAK,IAAI,KAAK,EAAE;AAE7C,UAAI,OAAO,2BAA2B,KAAK,wBAAwB;AAClE,eAAO,wBAAwB;AAAA,UAC9B,KAAK;AAAA,UACL;AAAA,QACD;AAAA,MACD;AAEA,UAAI,CAAC,SAAS,cAAc,oBAAoB,GAAG;AAClD,iBAAS,KAAK,MAAM,WAAW;AAC/B,YAAI,KAAK,sBAAuB,UAAS,KAAK,MAAM,eAAe;AAAA,MACpE;AAEA,UAAI,KAAK,mBAAmB;AAC3B,aAAK,kBAAkB,MAAM;AAC7B,aAAK,oBAAoB;AAAA,MAC1B;AAEA,UAAI,KAAK,EAAE;AACX,UAAI,OAAO,OAAO,WAAY,IAAG;AAEjC,UAAI,WAAU,mBAAmB,GAAG;AACnC,iBAAS,KAAK,UAAU,OAAO,sBAAsB;AACrD,YAAI,KAAK,iBAAkB,YAAU,gBAAgB;AAAA,MACtD;AAAA,IACD;AAEA,WAAO,IAAI,QAAQ,CAAC,YAAY;AAC/B,WAAK,GAAG,UAAU,OAAO,QAAQ,QAAQ;AACzC,WAAK,GAAG,gBAAgB,cAAc;AACtC,WAAK,GAAG,gBAAgB,UAAU;AAElC,WAAK,GAAG,MAAM,UAAU;AAExB,UAAI,WAAY,SAAQ,OAAO;AAAA,UAC1B,iBAAgB,KAAK,iBAAiB,MAAM,QAAQ,OAAO,CAAC;AAAA,IAClE,CAAC;AAAA,EACF;AAAA,EAEO,gBAAgB;AACtB,UAAM,QAAQ,MAAM;AAAA,MACnB,SAAS;AAAA,QACR,sBAAsB,KAAK,GAAG,EAAE;AAAA,MACjC;AAAA,IACD;AACA,UAAM,aAAa,MAAM,OAAO,CAAC,QAAQ,CAAC,KAAK,cAAc,SAAS,GAAG,CAAC;AAE1E,QAAI,WAAW,QAAQ;AACtB,WAAK,cAAc,KAAK,GAAG,UAAU;AACrC,WAAK,mBAAmB,UAAU;AAAA,IACnC;AAEA,SAAK,gBAAgB,KAAK,cAAc,OAAO,CAAC,QAAQ;AA1nB1D;AA2nBG,UAAI,SAAS,SAAS,GAAG,EAAG,QAAO;AAEnC,YAAM,YAAW,UAAK,2BAAL,mBAA6B;AAAA,QAC7C,CAAC,QAAQ,IAAI,OAAO;AAAA;AAErB,UAAI,SAAU,KAAI,oBAAoB,SAAS,SAAS,EAAgB;AAExE,aAAO;AAAA,IACR,CAAC;AAAA,EACF;AAAA,EAEO,UAAU;AAEhB,SAAK,GAAG,UAAU,OAAO,QAAQ,UAAU,KAAK,WAAW;AAC3D,QAAI,KAAK,gBAAgB;AACxB,eAAS,KAAK,UAAU,OAAO,sBAAsB;AAAA,IACtD;AAGA,SAAK,GAAG,oBAAoB,SAAS,KAAK,sBAAsB;AAChE,QAAI,KAAK,uBAAuB,QAAQ;AACvC,WAAK,uBAAuB,QAAQ,CAAC,EAAE,IAAI,GAAG,MAAM;AACnD,WAAG,oBAAoB,SAAS,EAAE;AAAA,MACnC,CAAC;AACD,WAAK,yBAAyB;AAAA,IAC/B;AACA,QAAI,KAAK,UAAU;AAClB,WAAK,SAAS,oBAAoB,SAAS,KAAK,uBAAuB;AAAA,IACxE;AAEA,QAAI,KAAK,UAAU;AAClB,WAAK,SAAS,OAAO;AACrB,WAAK,WAAW;AAAA,IACjB;AAEA,WAAO,uBAAuB,OAAO,qBAAqB;AAAA,MACzD,CAAC,EAAE,QAAQ,MAAM,QAAQ,OAAO,KAAK;AAAA,IACtC;AAAA,EACD;AAAA;AAAA,EAGA,OAAe,iBACd,QACoC;AACpC,WAAO,OAAO,qBAAqB,KAAK,CAAC,OAAO;AAC/C,UAAI,kBAAkB,WAAW,QAAO,GAAG,QAAQ,OAAO,OAAO;AAAA,eACxD,OAAO,WAAW,UAAU;AACpC,eAAO,GAAG,QAAQ,OAAO,SAAS,cAAc,MAAM;AAAA,MACvD,MAAO,QAAO,GAAG,QAAQ,OAAO;AAAA,IACjC,CAAC,KAAK;AAAA,EACP;AAAA,EAEA,OAAO,YAAY,QAA8B,YAAsB;AAEtE,UAAM,QAAQ,OAAO,WAAW,WAC7B,SAAS,cAAc,MAAM,IAC7B;AACH,UAAM,WAAU,+BAAO,aAAa,sBACjC,MAAM,aAAa,iBAAiB,IACpC;AAEH,UAAM,iBAAiB,OAAO,qBAAqB;AAAA,MAClD,CAAC,OACA,GAAG,QAAQ,QACT,OAAO,YAAY,WACjB,SAAS,cAAc,OAAO,IAC9B,YACJ,GAAG,QAAQ,QACT,OAAO,YAAY,WACjB,SAAS,cAAc,OAAO,IAC9B;AAAA,IACN;AAEA,WAAO,iBACJ,aAAa,iBAAiB,eAAe,QAAQ,KACrD;AAAA,EACJ;AAAA,EAEA,OAAO,WAAW;AACjB,QAAI,CAAC,OAAO,sBAAsB;AACjC,aAAO,uBAAuB,CAAC;AAAA,IAChC;AAEA,QAAI,OAAO,sBAAsB;AAChC,aAAO,uBAAuB,OAAO,qBAAqB;AAAA,QACzD,CAAC,EAAE,QAAQ,MAAM,SAAS,SAAS,QAAQ,EAAE;AAAA,MAC9C;AAAA,IACD;AAEA,aACE,iBAAiB,0CAA0C,EAC3D,QAAQ,CAAC,OAAoB;AAC7B,UACC,CAAC,OAAO,qBAAqB;AAAA,QAC5B,CAAC,QAAK;AAztBZ;AAytBgB,mDAAK,YAAL,mBAAc,QAAuB;AAAA;AAAA,MAChD,GACC;AACD,YAAI,WAAU,EAAE;AAAA,MACjB;AAAA,IACD,CAAC;AAAA,EACH;AAAA,EAEA,OAAO,KAAK,QAA0C;AACrD,UAAM,WAAW,WAAU,iBAAiB,MAAM;AAElD,QACC,YACA,SAAS,QAAQ,GAAG,UAAU,SAAS,SAAS,QAAQ,WAAW,EAClE,UAAS,QAAQ,KAAK;AAAA,EACzB;AAAA,EAEA,OAAO,MAAM,QAA0C;AACtD,UAAM,WAAW,WAAU,iBAAiB,MAAM;AAElD,QACC,YACA,CAAC,SAAS,QAAQ,GAAG,UAAU,SAAS,SAAS,QAAQ,WAAW,EACnE,UAAS,QAAQ,MAAM;AAAA,EAC1B;AAAA,EAEA,OAAO,OAAO,QAA0C,YAAqB;AAC5E,UAAM,WAAW,WAAU,iBAAiB,MAAM;AAElD,QAAI,UAAU;AACb,eAAS,QAAQ,OAAO,UAAU;AAAA,IACnC;AAAA,EACD;AAAA,EAEA,OAAO,UAAU,YAAoB,IAAgC;AACpE,QAAI,SAAS,KAAK,eAAe,YAAY;AAC5C,UAAI,GAAG,QAAQ,GAAG,UAAU,SAAS,UAAU,GAAG;AACjD,WAAG,QAAQ,OAAO,KAAK;AAAA,MACxB;AAEA,eAAS,KAAK,UAAU,IAAI,sBAAsB;AAElD,SAAG,QAAQ,KAAK;AAAA,IACjB,MAAO,IAAG,QAAQ,MAAM,IAAI;AAAA,EAC7B;AAAA;AAAA,EAGQ,qBAA2B;AAClC,SAAK,yBAAyB,OAAO,wBACnC;AAAA,MACA,KAAK;AAAA,MACL;AAAA,QACC,SAAS,MAAM;AACd,cAAI,CAAC,KAAK,SAAS,EAAG,MAAK,KAAK;AAAA,QACjC;AAAA,QACA,OAAO,MAAM;AACZ,cAAI,KAAK,SAAS,GAAG;AACpB,iBAAK,MAAM;AAAA,UACZ;AAAA,QACD;AAAA,QACA,OAAO,MAAM;AArxBlB;AAsxBM,cAAI,CAAC,KAAK,SAAS,KAAK,CAAC,KAAK,0BAA2B;AAEzD,gBAAM,oBAAoB,MAAM;AAAA,YAC/B,KAAK,GAAG;AAAA,cACP;AAAA,YACD;AAAA,UACD,EAAE;AAAA,YAAO,CAAC,OACT,CAAC,GAAG,UAAU,OAAO,iBAAiB,EAAE,EAAE,YAAY;AAAA,UACvD;AAEA,cAAI,kBAAkB,WAAW,EAAG;AAEpC,gBAAM,iBAAiB,KAAK,GAAG,cAAc,QAAQ;AACrD,gBAAM,eAAe,iBAClB,kBAAkB,QAAQ,cAA6B,IACvD;AACH,gBAAM,iBAAiB,OAAO,iBAAiB,iBAC9C,OAAO,MAAM;AAEd,cAAI,gBAAgB;AACnB,gBAAI,gBAAgB,GAAG;AACtB,gCAAkB,kBAAkB,SAAS,CAAC,EAAE,MAAM;AAAA,YACvD,OAAO;AACN,gCAAkB,eAAe,CAAC,EAAE,MAAM;AAAA,YAC3C;AAAA,UACD,OAAO;AACN,gBAAI,iBAAiB,kBAAkB,SAAS,GAAG;AAClD,gCAAkB,CAAC,EAAE,MAAM;AAAA,YAC5B,OAAO;AACN,gCAAkB,eAAe,CAAC,EAAE,MAAM;AAAA,YAC3C;AAAA,UACD;AAEA,uBAAO,UAAP,mBAAc;AAAA,QACf;AAAA,MACD;AAAA,MACA,KAAK,SAAS;AAAA,MACd;AAAA,MACA;AAAA,IACD;AAED,SAAK,cAAc,QAAQ,CAAC,iBAAiB;AAC5C,aAAO,wBAAwB;AAAA,QAC9B;AAAA,QACA;AAAA,UACC,SAAS,MAAM;AACd,gBAAI,CAAC,KAAK,SAAS,EAAG,MAAK,KAAK;AAAA,UACjC;AAAA,UACA,OAAO,MAAM;AACZ,gBAAI,KAAK,SAAS,GAAG;AACpB,mBAAK,MAAM;AAAA,YACZ;AAAA,UACD;AAAA,QACD;AAAA,QACA,KAAK,SAAS;AAAA,QACd;AAAA,QACA,sBAAsB,KAAK,GAAG,EAAE;AAAA,MACjC;AAAA,IACD,CAAC;AAAA,EACF;AAAA;AAAA,EAGA,OAAO,GACN,KACA,QACA,IACC;AACD,UAAM,WAAW,WAAU,iBAAiB,MAAM;AAElD,QAAI,SAAU,UAAS,QAAQ,OAAO,GAAG,IAAI;AAAA,EAC9C;AACD;AAlzBC,cAlBK,YAkBE,kBAAiB;AAgBxB,cAlCK,YAkCE,iBAAgB;AAlCxB,IAAM,YAAN;AA60BA,IAAI,gBAAsD;AAE1D,IAAM,iBAAiB,CAAC,UAAsB,QAAgB,QAAQ;AACrE,MAAI,cAAe,cAAa,aAAa;AAE7C,kBAAgB,WAAW,UAAU,KAAK;AAC3C;AAEA,IAAM,oBAAoB,MAAM;AAC/B,MACC,CAAC,OAAO,qBAAqB,UAC7B,CAAC,OAAO,qBAAqB,KAAK,CAAC,OAAO,GAAG,QAAQ,SAAS,GAC7D;AACD,WAAO;AAAA,EACR;AAEA,QAAM,WAAW,OAAO,qBAAqB;AAAA,IAC5C,CAAC,OAAO,GAAG,QAAQ;AAAA,EACpB;AAEA,WAAS,QAAQ,CAAC,YAAY;AAC7B,UAAM,EAAE,uBAAuB,UAAU,IAAI,QAAQ;AACrD,UAAM,YAAY,0BAA0B,cACzC,SAAS,KAAK,eAAe,YAC7B,SAAS,KAAK,eAAe;AAEhC,QAAI,aAAa,QAAQ,QAAQ,GAAG,UAAU,SAAS,QAAQ,GAAG;AACjE,UAAI,QAAQ,QAAQ,GAAG,UAAU,SAAS,UAAU,GAAG;AACtD,gBAAQ,QAAQ,OAAO,KAAK;AAAA,MAC7B;AAEA,cAAQ,QAAQ,MAAM,IAAI;AAAA,IAC3B,OAAO;AACN,UACC,QAAQ,QAAQ,kBAChB,QAAQ,QAAQ,GAAG,UAAU,SAAS,QAAQ,GAC7C;AACD,iBAAS,KAAK,UAAU,IAAI,sBAAsB;AAAA,MACnD;AAAA,IACD;AAAA,EACD,CAAC;AACF;AAEA,IAAM,4BAA4B,MAAM;AACvC,MACC,CAAC,OAAO,qBAAqB,UAC7B,CAAC,OAAO,qBAAqB,KAAK,CAAC,OAAO,GAAG,QAAQ,iBAAiB,GACrE;AACD,WAAO;AAAA,EACR;AAEA,QAAM,WAAW,OAAO,qBAAqB;AAAA,IAC5C,CAAC,OAAO,GAAG,QAAQ;AAAA,EACpB;AAEA,WAAS,QAAQ,CAAC,YAAY;AAC7B,UAAM,aAAa,QAAQ,QAAQ;AACnC,UAAM,YAAY,QAAQ,QAAQ;AAClC,UAAM,WAAW,SAAS,cAAc,MAAM;AAC9C,UAAM,SAAS,QAAQ,QAAQ;AAE/B,QAAI,CAAC,aAAa,OAAQ,QAAO;AAEjC,QACC,SAAS,KAAK,eAAe,cAC7B,CAAC,cAAc,UAAU,MAAM,GAC9B;AACD,eAAS,YAAY,MAAM;AAAA,IAC5B,WACC,SAAS,KAAK,cAAc,cAC5B,CAAC,UAAU,SAAS,MAAM,GACzB;AACD,gBAAU,YAAY,MAAM;AAAA,IAC7B;AAAA,EACD,CAAC;AACF;AAEA,IAAM,oBAAoB,MAAM;AAC/B,MACC,CAAC,OAAO,qBAAqB,UAC7B,CAAC,OAAO,qBAAqB,KAAK,CAAC,OAAO,GAAG,QAAQ,gBAAgB,GACpE;AACD,WAAO;AAAA,EACR;AAEA,QAAM,WAAW,OAAO,qBAAqB;AAAA,IAC5C,CAAC,OAAO,GAAG,QAAQ;AAAA,EACpB;AAEA,WAAS,QAAQ,CAAC,YAAY;AAC7B,UAAM,EAAE,iBAAiB,IAAI,QAAQ;AACrC,UAAM,YAAY,SAAS,KAAK,eAAe;AAE/C,QAAI,WAAW;AACd,UAAI,CAAC,QAAQ,QAAQ,GAAG,UAAU,SAAS,QAAQ,GAAG;AACrD,kBAAU,UAAU,kBAAkB,OAAO;AAAA,MAC9C;AAAA,IACD,OAAO;AACN,UAAI,QAAQ,QAAQ,GAAG,UAAU,SAAS,QAAQ,GAAG;AACpD,YAAI,QAAQ,QAAQ,GAAG,UAAU,SAAS,UAAU,GAAG;AACtD,kBAAQ,QAAQ,OAAO,KAAK;AAAA,QAC7B;AAEA,gBAAQ,QAAQ,MAAM,IAAI;AAAA,MAC3B;AAAA,IACD;AAAA,EACD,CAAC;AACF;AAEA,IAAM,4BAA4B,MAAM;AACvC,MACC,CAAC,OAAO,qBAAqB,UAC7B,CAAC,OAAO,qBAAqB;AAAA,IAAK,CAAC,OAClC,GAAG,QAAQ,GAAG,UAAU,SAAS,QAAQ;AAAA,EAC1C,GACC;AACD,WAAO;AAAA,EACR;AAEA,QAAM,WAAW,OAAO,qBAAqB;AAAA,IAAO,CAAC,OACpD,GAAG,QAAQ,GAAG,UAAU,SAAS,QAAQ;AAAA,EAC1C;AAEA,WAAS,QAAQ,CAAC,YAAY;AAC7B,UAAM,gBAAgB;AAAA,MACrB,OAAO,iBAAiB,QAAQ,QAAQ,EAAE,EAAE,iBAAiB,SAAS;AAAA,IACvE;AACA,UAAM,WAAwB,SAAS;AAAA,MACtC,IAAI,QAAQ,QAAQ,GAAG,EAAE;AAAA,IAC1B;AACA,QAAI,CAAC,SAAU,QAAO;AAEtB,UAAM,iBAAiB;AAAA,MACtB,OAAO,iBAAiB,QAAQ,EAAE,iBAAiB,SAAS;AAAA,IAC7D;AACA,QAAI,kBAAkB,iBAAiB,EAAG,QAAO;AAEjD,QAAI,WAAW,SAAU,UAAS,MAAM,SAAS,GAAG,gBAAgB,CAAC;AAErE,aAAS,KAAK,UAAU,IAAI,sBAAsB;AAAA,EACnD,CAAC;AACF;AAEA,IAAM,mCAAmC,MAAM;AAr/B/C;AAs/BC,MAAI,GAAC,YAAO,yBAAP,mBAA6B,QAAQ;AAE1C,SAAO,qBAAqB,QAAQ,CAAC,gBAAgB;AAx/BtD,QAAAA;AAy/BE,UAAM,UAAU,YAAY;AAC5B,UACCA,MAAA,QAAQ,0BAAR,gBAAAA,IAA+B,UAAS,KACxC,QAAQ,kBACP;AACD,UAAI,SAAS,KAAK,eAAe,QAAQ,kBAAkB;AAC1D,iBAAS,KAAK,UAAU,IAAI,sBAAsB;AAAA,MACnD,OAAO;AACN,iBAAS,KAAK,UAAU,OAAO,sBAAsB;AAAA,MACtD;AAAA,IACD;AAAA,EACD,CAAC;AACF;AAEA,OAAO,iBAAiB,QAAQ,MAAM;AACrC,YAAU,SAAS;AAEnB,4BAA0B;AAC1B,mCAAiC;AAIlC,CAAC;AAED,OAAO,iBAAiB,UAAU,MAAM;AACvC,iBAAe,MAAM;AACpB,sBAAkB;AAClB,sBAAkB;AAAA,EACnB,CAAC;AAED,4BAA0B;AAC1B,4BAA0B;AAC1B,mCAAiC;AAClC,CAAC;AAED,IAAI,OAAO,WAAW,aAAa;AAClC,SAAO,YAAY;AACpB;AAEA,IAAO,kBAAQ;",
  "names": ["_a"]
}
