// node_modules/preline/src/utils/index.ts
var stringToBoolean = (string) => {
  return string === "true" ? true : false;
};
var getClassProperty = (el, prop, val = "") => {
  return (window.getComputedStyle(el).getPropertyValue(prop) || val).replace(
    " ",
    ""
  );
};
var isDirectChild = (parent, child) => {
  const children = parent.children;
  for (let i = 0; i < children.length; i++) {
    if (children[i] === child) return true;
  }
  return false;
};
var dispatch = (evt, element, payload = null) => {
  const event = new CustomEvent(evt, {
    detail: { payload },
    bubbles: true,
    cancelable: true,
    composed: false
  });
  element.dispatchEvent(event);
};
var afterTransition = (el, callback) => {
  const handleEvent = () => {
    callback();
    el.removeEventListener("transitionend", handleEvent, true);
  };
  const computedStyle = window.getComputedStyle(el);
  const transitionDuration = computedStyle.getPropertyValue(
    "transition-duration"
  );
  const transitionProperty = computedStyle.getPropertyValue(
    "transition-property"
  );
  const hasTransition = transitionProperty !== "none" && parseFloat(transitionDuration) > 0;
  if (hasTransition) el.addEventListener("transitionend", handleEvent, true);
  else callback();
};

// node_modules/preline/src/plugins/base-plugin/index.ts
var HSBasePlugin = class {
  constructor(el, options, events) {
    this.el = el;
    this.options = options;
    this.events = events;
    this.el = el;
    this.options = options;
    this.events = {};
  }
  createCollection(collection, element) {
    var _a;
    collection.push({
      id: ((_a = element == null ? void 0 : element.el) == null ? void 0 : _a.id) || collection.length + 1,
      element
    });
  }
  fireEvent(evt, payload = null) {
    if (this.events.hasOwnProperty(evt)) return this.events[evt](payload);
  }
  on(evt, cb) {
    this.events[evt] = cb;
  }
};

export {
  stringToBoolean,
  getClassProperty,
  isDirectChild,
  dispatch,
  afterTransition,
  HSBasePlugin
};
/*! Bundled license information:

preline/src/utils/index.ts:
  (*
   * @version: 3.2.3
   * @author: Preline Labs Ltd.
   * @license: Licensed under MIT and Preline UI Fair Use License (https://preline.co/docs/license.html)
   * Copyright 2024 Preline Labs Ltd.
   *)

preline/src/plugins/base-plugin/index.ts:
  (*
   * HSBasePlugin
   * @version: 3.2.3
   * @author: Preline Labs Ltd.
   * @license: Licensed under MIT and Preline UI Fair Use License (https://preline.co/docs/license.html)
   * Copyright 2024 Preline Labs Ltd.
   *)
*/
//# sourceMappingURL=chunk-WHMMH7RJ.js.map
